----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 12:41:19

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear
file C:/Users/jdmic/git/solar_stove/data/refined/cleaned_ingredients.dta not found
r(601);

end of do-file
r(601);

end of do-file

r(601);

. do "C:\Users\jdmic\git\solar_stove\project.do"

. * project: solar stoves
. * created on: July 2020
. * created by: lem
. * Stata v.19.5
. 
. * does
.         * establishes an identical workspace between users
.         * sets globals that define absolute paths
.         * serves as the starting point to find any .do file, dataset or output
.         * runs all .do files needed for data work.
.         * loads any user written packages needed for analysis
. 
. * assumes
.         * access to all data (Dropbox) and code (GitHub)
. 
. * TO DO:
.         * add .do files as they are completed
. 
.         
. ***********************************************************************
. * 0 - setup
. ***********************************************************************
. 
. * set $pack to 0 to skip package installation
.         global                  pack                    0

.                 
. * Specify Stata version in use
.     global stataVersion 17    // set Stata version

.     version $stataVersion

.                 
. ***********************************************************************
. * 0 (a) - Create user specific paths
. ***********************************************************************
. 
. * Define root folder globals
.     if `"`c(username)'"' == "jdmic" {
.     global              code    "C:/Users/jdmic/git/solar_stove"
.         global          data    "C:/Users/jdmic/git/solar_stove/data"
.     }

. 
.     if `"`c(username)'"' == "lauramccann" {
.     global              code    "/Users/lauramccann/Documents/GitHub/solar_stove"
.         global          data    "/Users/lauramccann/Dropbox/Solar_Stoves"
.     }

. 
. ***********************************************************************
. * 0 (b) - Check if any required packages are installed:
. ***********************************************************************
. 
. * install packages if global is set to 1
. if $pack == 1 {
.         
.         * for packages/commands, make a local containing any required packages
.                 loc userpack "blindschemes mdesc estout distinct winsor2 mipolate egenmore reghdfe ftools coefplot i
> vreg2 ranktest grc1leg2" 
.         
.         * install packages that are on ssc      
.                 foreach package in `userpack' {
  2.                         capture : which `package', all
  3.                         if (_rc) {
  4.                                 capture window stopbox rusure "You are missing some packages." "Do you want to in
> stall `package'?"
  5.                                 if _rc == 0 {
  6.                                         capture ssc install `package', replace
  7.                                         if (_rc) {
  8.                                                 window stopbox rusure `"This package is not on SSC. Do you want t
> o proceed without it?"'
  9.                                         }
 10.                                 }
 11.                                 else {
 12.                                         exit 199
 13.                                 }
 14.                         }
 15.                 }
.         
.         * update all ado files
.                 ado update, update
. 
.         * set graph and Stata preferences
.                 set scheme plotplain, perm
.                 set more off
. }

. 
. * Set log preferences
.         set             logtype text    // so logs can be opened without Stata

. 
. ***********************************************************************
. * 1 - run ingredients data cleaning .do file
. ***********************************************************************
. 
.         do                              "$code/cleaning/food_converter.do"

. * project: solar stove
. * created on: july 2020
. * created by: lem
. * edited by: jdm
. * edited on: 12 Sep 2024
. * stata v.18.5
. 
. * does
.         * inputs raw ingredient dictionary
.         * converts Lozi to English names
.         * outputs cleaned ingredient dictionary
.                 * this outputted file will be used to match translated names of         
.                 * ingredients, their food groups, and their level of processing to 
.                 * ingredient observations in our raw ingredient data
. 
. * assumes
.         * access to raw ingredient dictionary
.         * mipolate
. 
. * to do:
.         * done
. 
.         
. ***********************************************************************
. **# 0 - setup
. ***********************************************************************
. 
. * define paths
.         global                  root    =       "$data/raw/dietary"

.         global                  export  =       "$data/refined"

.         global                  logout  =       "$data/logs"

.         
. * open log
.         cap log                 close 
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 12:44:05

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,025 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,025 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
file C:/Users/jdmic/git/solar_stove/data/raw/dietary/sci_names.dta not found
r(601);

end of do-file
r(601);

end of do-file

r(601);

. do "C:\Users\jdmic\git\solar_stove\project.do"

. * project: solar stoves
. * created on: July 2020
. * created by: lem
. * Stata v.19.5
. 
. * does
.         * establishes an identical workspace between users
.         * sets globals that define absolute paths
.         * serves as the starting point to find any .do file, dataset or output
.         * runs all .do files needed for data work.
.         * loads any user written packages needed for analysis
. 
. * assumes
.         * access to all data (Dropbox) and code (GitHub)
. 
. * TO DO:
.         * add .do files as they are completed
. 
.         
. ***********************************************************************
. * 0 - setup
. ***********************************************************************
. 
. * set $pack to 0 to skip package installation
.         global                  pack                    0

.                 
. * Specify Stata version in use
.     global stataVersion 17    // set Stata version

.     version $stataVersion

.                 
. ***********************************************************************
. * 0 (a) - Create user specific paths
. ***********************************************************************
. 
. * Define root folder globals
.     if `"`c(username)'"' == "jdmic" {
.     global              code    "C:/Users/jdmic/git/solar_stove"
.         global          data    "C:/Users/jdmic/git/solar_stove/data"
.     }

. 
.     if `"`c(username)'"' == "lauramccann" {
.     global              code    "/Users/lauramccann/Documents/GitHub/solar_stove"
.         global          data    "/Users/lauramccann/Dropbox/Solar_Stoves"
.     }

. 
. ***********************************************************************
. * 0 (b) - Check if any required packages are installed:
. ***********************************************************************
. 
. * install packages if global is set to 1
. if $pack == 1 {
.         
.         * for packages/commands, make a local containing any required packages
.                 loc userpack "blindschemes mdesc estout distinct winsor2 mipolate egenmore reghdfe ftools coefplot i
> vreg2 ranktest grc1leg2" 
.         
.         * install packages that are on ssc      
.                 foreach package in `userpack' {
  2.                         capture : which `package', all
  3.                         if (_rc) {
  4.                                 capture window stopbox rusure "You are missing some packages." "Do you want to in
> stall `package'?"
  5.                                 if _rc == 0 {
  6.                                         capture ssc install `package', replace
  7.                                         if (_rc) {
  8.                                                 window stopbox rusure `"This package is not on SSC. Do you want t
> o proceed without it?"'
  9.                                         }
 10.                                 }
 11.                                 else {
 12.                                         exit 199
 13.                                 }
 14.                         }
 15.                 }
.         
.         * update all ado files
.                 ado update, update
. 
.         * set graph and Stata preferences
.                 set scheme plotplain, perm
.                 set more off
. }

. 
. * Set log preferences
.         set             logtype text    // so logs can be opened without Stata

. 
. ***********************************************************************
. * 1 - run ingredients data cleaning .do file
. ***********************************************************************
. 
.         do                              "$code/cleaning/food_converter.do"

. * project: solar stove
. * created on: july 2020
. * created by: lem
. * edited by: jdm
. * edited on: 12 Sep 2024
. * stata v.18.5
. 
. * does
.         * inputs raw ingredient dictionary
.         * converts Lozi to English names
.         * outputs cleaned ingredient dictionary
.                 * this outputted file will be used to match translated names of         
.                 * ingredients, their food groups, and their level of processing to 
.                 * ingredient observations in our raw ingredient data
. 
. * assumes
.         * access to raw ingredient dictionary
.         * mipolate
. 
. * to do:
.         * done
. 
.         
. ***********************************************************************
. **# 0 - setup
. ***********************************************************************
. 
. * define paths
.         global                  root    =       "$data/raw/dietary"

.         global                  export  =       "$data/refined"

.         global                  logout  =       "$data/logs"

.         
. * open log
.         cap log                 close 
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 12:45:51

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,035 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,035 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
(variable english was str21, now str48 to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                            61
        from master                         1  (_merge==1)
        from using                         60  (_merge==2)

    Matched                            93,723  (_merge==3)
    -----------------------------------------

.         *** 94,269 merged, only 1 in master didn't merge
.         
.         tab                             english if _merge == 1

             English Name of Ingredient |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                        mauberry fruits |          1      100.00      100.00
----------------------------------------+-----------------------------------
                                  Total |          1      100.00

.         
.         replace                 scientific_name = "morus" if english == "mauberry fruits"
(1 real change made)

.         lab var                 scientific_name "Scientific Name"

.         
.         drop if                 _merge == 2
(60 observations deleted)

.         drop                    _merge

.         
.         encode                  scientific_name, gen(sci)

.         replace                 sci = 0 if sci == .
(27,405 real changes made)

.         lab var                 sci "Scientific Name"

.         drop                    scientific_name

.         
. * generate ingredient count per dish
.         egen                    ingred_dish = nvals(english), by(hhid week day meal dish)

.         lab var                 ingred_dish "Unique Ingredients: Dish"

.         
.         egen                    ingred_meal = nvals(english), by(hhid week day meal)

.         lab var                 ingred_meal "Unique Ingredients: Meal"

.         
.         egen                    ingred_day = nvals(english), by(hhid week day)

.         lab var                 ingred_day "Unique Ingredients: Day"

.         
.         egen                    ingred_week = nvals(english), by(hhid week)

.         lab var                 ingred_week "Unique Ingredients: Week"

.         
. * clean food group to put it into 12 categories (not 18)
.         replace                 fg = 14 if fg == 0
(5 real changes made)

.         replace                 fg = 5 if fg == 3 | fg == 4
(7,826 real changes made)

.         replace                 fg = 7 if fg == 6
(17 real changes made)

.         replace                 fg = 9 if fg == 8
(29 real changes made)

.         replace                 fg = 12 if fg == 19
(2,414 real changes made)

.         replace                 fg = 15 if fg == 17
(178 real changes made)

.         replace                 fg = 16 if fg == 18
(929 real changes made)

.         lab define              foodgroup 0 "None" 1 "Cereals" 2 "Tubers" 3 "Vitamin-A Vegetables" ///
>                                         4 "Leafy Greens" 5 "Vegetables" 6 "Vitamin-A Fruits" 7 "Fruits" ///
>                                         8 "Organ Meat" 9 "Meat" 10 "Eggs" 11 "Fish" 12 "Legumes, Nuts, & Seeds" ///
>                                         13 "Milk" 14 "Oils & Fats" 15 "Sweets" ///
>                                         16 "Spices, Condiments, & Beverages" 17 "Fried Snacks" ///
>                                         18 "Beverages", replace

.         
. 
.                                         
. ***********************************************************************
. **## 1.1 - create ingredient summary stats
. ***********************************************************************
. 
. * encode english string var into a numeric variable
.         encode                  english, gen(ingredients)

.         bys                     ingredients: gen size = _N

.         replace                 ingredients = 0 if size < 565
(5,749 real changes made)

.         lab define              ingredients 0 "other", add

.         
.         gen                             science = sci

.         replace                 science = . if science == 0
(27,405 real changes made, 27,405 to missing)

.         lab values              science sci

.         bys                     science: gen sizes = _N

.         replace                 science = 0 if sizes < 139
(1,336 real changes made)

.         lab define              sci 0 "other", add

.         
. * post frequency table of ingredients
.                 estpost tab             ingredients, sort nototal

 ingredients |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
        salt |     13702   14.61952   14.61952 
    porridge |     10520   11.22445   25.84397 
         oil |      9846   10.50531   36.34928 
       maize |      8267    8.82058   45.16986 
      tomato |      7977    8.51116   53.68102 
 maize_flour |      6056   6.461525   60.14255 
       other |      5749   6.133968   66.27651 
     cassava |      5581   5.954718   72.23123 
        fish |      3820   4.075797   76.30703 
       onion |      3792   4.045922   80.35295 
       sugar |      2679   2.858393   83.21134 
        rape |      2095   2.235287   85.44663 
   groundnut |      1954   2.084845   87.53148 
   sour_milk |      1501   1.601511   89.13299 
      cowpea |      1323   1.411591   90.54458 
cassava_le~s |      1073   1.144851   91.68943 
sweet_potato |      1025   1.093637   92.78307 
pumpkin_le~s |      1006   1.073364   93.85643 
    amaranth |       983   1.048824   94.90525 
    hibiscus |       942   1.005079   95.91033 
        rice |       869   .9271905   96.83752 
        meat |       826   .8813111   97.71883 
  tea_leaves |       817   .8717084   98.59054 
     pumpkin |       756   .8066237   99.39717 
        okra |       565   .6028339        100 

.          
. * code for latex tables
.         esttab                  using "$output/descriptive/ing_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "the top 25 ingredient was recorded in the food diaries and 
> the relative " ///
>                                                         "frequency of that ingredient in the entire data set. In tot
> al " ///
>                                                         "111 different ingredients were recorded, excluding water.} 
>  \end{tabular}")    
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(file C:/Users/jdmic/git/solar_stove/data/analysis/tables/descriptive/ing_tab.tex not found)
file C:/Users/jdmic/git/solar_stove/data/analysis/tables/descriptive/ing_tab.tex could not be opened
r(603);

end of do-file
r(603);

end of do-file

r(603);

. do "C:\Users\jdmic\git\solar_stove\cleaning\diet_clean.do"

. * project: solar stoves - final outcomes: composition of diet
. * created on: Sep 2024
. * created by: jdm
. * edited by: jdm
. * edited on: 14 Mar 25
. * stata v.18.5
. 
. * does
.         * inputs cleaned ingredient data
.         * generates HDDS and SR indices
.         * generates variables for number of meals, number of meals skipped, and
.                 * average number of dishes per meal type
.         * outputs regression ready data
. 
. * assumes
.         * access to cleaned ingredient dictionary
.         * egenmore
.         * xfill
. 
. * to do:
.         * done
. 
. 
. ***********************************************************************
. **# 0 - setup
. ***********************************************************************
. 
. * define paths
.         global  root    =       "$data/raw/dietary"

.         global  export  =       "$data/refined"

.         global  output  =       "$data/analysis/tables"

.         global  figure  =       "$data/analysis/figures"

.         global  logout  =       "$data/logs"

.         
. * open log
.         cap log                         close 
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 12:48:52

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,035 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,035 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
(variable english was str21, now str48 to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                            61
        from master                         1  (_merge==1)
        from using                         60  (_merge==2)

    Matched                            93,723  (_merge==3)
    -----------------------------------------

.         *** 94,269 merged, only 1 in master didn't merge
.         
.         tab                             english if _merge == 1

             English Name of Ingredient |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                        mauberry fruits |          1      100.00      100.00
----------------------------------------+-----------------------------------
                                  Total |          1      100.00

.         
.         replace                 scientific_name = "morus" if english == "mauberry fruits"
(1 real change made)

.         lab var                 scientific_name "Scientific Name"

.         
.         drop if                 _merge == 2
(60 observations deleted)

.         drop                    _merge

.         
.         encode                  scientific_name, gen(sci)

.         replace                 sci = 0 if sci == .
(27,405 real changes made)

.         lab var                 sci "Scientific Name"

.         drop                    scientific_name

.         
. * generate ingredient count per dish
.         egen                    ingred_dish = nvals(english), by(hhid week day meal dish)

.         lab var                 ingred_dish "Unique Ingredients: Dish"

.         
.         egen                    ingred_meal = nvals(english), by(hhid week day meal)

.         lab var                 ingred_meal "Unique Ingredients: Meal"

.         
.         egen                    ingred_day = nvals(english), by(hhid week day)

.         lab var                 ingred_day "Unique Ingredients: Day"

.         
.         egen                    ingred_week = nvals(english), by(hhid week)

.         lab var                 ingred_week "Unique Ingredients: Week"

.         
. * clean food group to put it into 12 categories (not 18)
.         replace                 fg = 14 if fg == 0
(5 real changes made)

.         replace                 fg = 5 if fg == 3 | fg == 4
(7,826 real changes made)

.         replace                 fg = 7 if fg == 6
(17 real changes made)

.         replace                 fg = 9 if fg == 8
(29 real changes made)

.         replace                 fg = 12 if fg == 19
(2,414 real changes made)

.         replace                 fg = 15 if fg == 17
(178 real changes made)

.         replace                 fg = 16 if fg == 18
(929 real changes made)

.         lab define              foodgroup 0 "None" 1 "Cereals" 2 "Tubers" 3 "Vitamin-A Vegetables" ///
>                                         4 "Leafy Greens" 5 "Vegetables" 6 "Vitamin-A Fruits" 7 "Fruits" ///
>                                         8 "Organ Meat" 9 "Meat" 10 "Eggs" 11 "Fish" 12 "Legumes, Nuts, & Seeds" ///
>                                         13 "Milk" 14 "Oils & Fats" 15 "Sweets" ///
>                                         16 "Spices, Condiments, & Beverages" 17 "Fried Snacks" ///
>                                         18 "Beverages", replace

.         
. 
.                                         
. ***********************************************************************
. **## 1.1 - create ingredient summary stats
. ***********************************************************************
. 
. * encode english string var into a numeric variable
.         encode                  english, gen(ingredients)

.         bys                     ingredients: gen size = _N

.         replace                 ingredients = 0 if size < 565
(5,749 real changes made)

.         lab define              ingredients 0 "other", add

.         
.         gen                             science = sci

.         replace                 science = . if science == 0
(27,405 real changes made, 27,405 to missing)

.         lab values              science sci

.         bys                     science: gen sizes = _N

.         replace                 science = 0 if sizes < 139
(1,336 real changes made)

.         lab define              sci 0 "other", add

.         
. * post frequency table of ingredients
.                 estpost tab             ingredients, sort nototal

 ingredients |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
        salt |     13702   14.61952   14.61952 
    porridge |     10520   11.22445   25.84397 
         oil |      9846   10.50531   36.34928 
       maize |      8267    8.82058   45.16986 
      tomato |      7977    8.51116   53.68102 
 maize_flour |      6056   6.461525   60.14255 
       other |      5749   6.133968   66.27651 
     cassava |      5581   5.954718   72.23123 
        fish |      3820   4.075797   76.30703 
       onion |      3792   4.045922   80.35295 
       sugar |      2679   2.858393   83.21134 
        rape |      2095   2.235287   85.44663 
   groundnut |      1954   2.084845   87.53148 
   sour_milk |      1501   1.601511   89.13299 
      cowpea |      1323   1.411591   90.54458 
cassava_le~s |      1073   1.144851   91.68943 
sweet_potato |      1025   1.093637   92.78307 
pumpkin_le~s |      1006   1.073364   93.85643 
    amaranth |       983   1.048824   94.90525 
    hibiscus |       942   1.005079   95.91033 
        rice |       869   .9271905   96.83752 
        meat |       826   .8813111   97.71883 
  tea_leaves |       817   .8717084   98.59054 
     pumpkin |       756   .8066237   99.39717 
        okra |       565   .6028339        100 

.          
. * code for latex tables
.         esttab                  using "$output/ing_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "the top 25 ingredient was recorded in the food diaries and 
> the relative " ///
>                                                         "frequency of that ingredient in the entire data set. In tot
> al " ///
>                                                         "111 different ingredients were recorded, excluding water.} 
>  \end{tabular}")    
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(file C:/Users/jdmic/git/solar_stove/data/analysis/tables/ing_tab.tex not found)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/ing_tab.tex)

. 
. * post frequency table of food groups
.                 estpost tab                     fg, sort nototal

          fg |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
           1 |     26171   27.92348   27.92348 
           5 |     21003   22.40941   50.33289 
          16 |     18215   19.43472   69.76762 
          14 |     10070   10.74431   80.51193 
           2 |      6667   7.113439   87.62537 
          12 |      4186   4.466305   92.09167 
          11 |      3820   4.075797   96.16747 
          13 |      1804     1.9248   98.09227 
           9 |      1123   1.198199   99.29047 
          10 |       329   .3510307    99.6415 
          15 |       190   .2027229   99.84422 
           7 |       146   .1557765        100 

row labels saved in macro e(labels)

.         
. * output table of food group frequencies
.                 esttab                   using "$output/fg_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment varlabels(`e(labels)') ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a food group is represented in the food diaries. There are 
> 12 " ///
>                                                         "total food groups.}  \end{tabular}")           
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(file C:/Users/jdmic/git/solar_stove/data/analysis/tables/fg_tab.tex not found)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/fg_tab.tex)

.         
. * post frequency table of species
.                 estpost tab                     science, sort nototal

     science |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
    zea_mays |     24925    37.5835    37.5835 
lycopersic~m |      7977   12.02823   49.61173 
manihot_es~a |      6666   10.05142   59.66314 
    fish_spp |      3820   5.760039   65.42318 
allium_cep~l |      3792   5.717818     71.141 
bos_tau~1758 |      2666   4.019964   75.16096 
cucurbuta_~o |      2196   3.311268   78.47223 
brassica_r~a |      2095   3.158974   81.63121 
arachis_hy~a |      1954   2.946365   84.57757 
       other |      1336   2.014506   86.59208 
vigna_ungu~p |      1327   2.000935   88.59301 
ipomoea_ba~s |      1324   1.996411   90.58942 
amaranthus~p |       983    1.48223   92.07165 
hibiscus_a~a |       942   1.420407   93.49206 
oryza_sati~l |       869   1.310333   94.80239 
aromatic_spp |       817   1.231924   96.03432 
gallus_~1758 |       570   .8594822    96.8938 
abelmoschu~s |       567   .8549586   97.74876 
lactarius_~p |       374    .563941    98.3127 
phaseolus_~l |       291   .4387883   98.75149 
cenchrus_a~s |       268   .4041074    99.1556 
schinzioph~i |       202   .3045884   99.46018 
brassica_o~a |       182   .2744312   99.73462 
cucurbita_~a |       176    .265384        100 

.         
. * output table of processed food frequencies
.                 esttab                   using "$output/sci_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       66,3190&      100 \\ 
> " ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a species is represented in the food diaries. There are 63 
> " ///
>                                                         "unique species total.}  \end{tabular}")                    
>             
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(file C:/Users/jdmic/git/solar_stove/data/analysis/tables/sci_tab.tex not found)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/sci_tab.tex)

.         
.         
. ***********************************************************************
. **# 2 - generate variables for final hdds outcomes
. ***********************************************************************         
.                 
. * generate hdds and sr for dish
.         egen                    hdds_dish = nvals(fg), by(hhid week day meal dish)

.         lab var                 hdds_dish "HDDS: Dish"

.         egen                    sr_dish   = nvals(sci), by(hhid week day meal dish)

.         lab var                 sr_dish "SR: Dish"

.         
.         egen                    hdds_avg_dish = mean(hdds_dish), by(hhid)

.         lab var                 hdds_avg_dish "HDDS: Average Dish"

.         egen                    sr_avg_dish = mean(sr_dish), by(hhid)

.         lab var                 sr_avg_dish "SR: Average Dish"

.         
. * generate hdds and sr for meal
.         egen                    hdds_meal = nvals(fg), by(hhid week day meal)

.         lab var                 hdds_meal "HDDS: Meal"

.         egen                    sr_meal   = nvals(sci), by(hhid week day meal)

.         lab var                 sr_meal "SR: Meal"

.         
.         egen                    hdds_avg_meal = mean(hdds_meal), by(hhid)

.         lab var                 hdds_avg_meal "HDDS: Average Meal"

.         egen                    sr_avg_meal = mean(sr_meal), by(hhid)

.         lab var                 sr_avg_meal "SR: Average Meal"

.         
. * generate hdds and sr for day
.         egen                    hdds_day = nvals(fg), by(hhid week day)

.         lab var                 hdds_day "HDDS: Day"

.         egen                    sr_day   = nvals(sci), by(hhid week day)

.         lab var                 sr_day "SR: Day"

.         
.         egen                    hdds_avg_day = mean(hdds_day), by(hhid)

.         lab var                 hdds_avg_day "HDDS: Average Day"

.         egen                    sr_avg_day = mean(sr_day), by(hhid)

.         lab var                 sr_avg_day "SR: Average Day"

.         
. * generate hdds and sr for week
.         egen                    hdds_week = nvals(fg), by(hhid week)

.         lab var                 hdds_week "HDDS: Week"

.         egen                    sr_week   = nvals(sci), by(hhid week)

.         lab var                 sr_week "SR: Week"

.         
.         egen                    hdds_avg_week = mean(hdds_week), by(hhid)

.         lab var                 hdds_avg_week "HDDS: Average Week"

.         egen                    sr_avg_week = mean(sr_week), by(hhid)

.         lab var                 sr_avg_week "SR: Average Week"

. 
. * generate hdds and sr for total
.         egen                    hdds_total = nvals(fg), by(hhid)

.         lab var                 hdds_total "HDDS: Total"

.         egen                    sr_total   = nvals(sci), by(hhid)       

.         lab var                 sr_total "SR: Total"

. 
.         
. ***********************************************************************
. **# 3 - generate legume variables and collapse
. ***********************************************************************         
. 
.         collapse                (max) legumes, ///
>                                         by(village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook hdds_dish sr_dish ///
>                                                 hdds_avg_dish sr_avg_dish hdds_meal ///
>                                                 sr_meal hdds_avg_meal sr_avg_meal hdds_day sr_day ///
>                                                 hdds_avg_day sr_avg_day hdds_week sr_week hdds_avg_week ///
>                                                 sr_avg_week hdds_total sr_total ingred_dish ingred_meal ///
>                                                 ingred_day ingred_week recall)

.         
.         lab var                 legumes "Where Legumes Eaten?"

.         
.         isid                    hhid week day meal dish

.         
. * generate legumes (pulses) for dish
.         rename                  legumes p_dish

.         lab var                 p_dish "Pulse: Dish"

.         
. * generate legumes (pulses) for meal
.         egen                    p_meal = total(p_dish), by(hhid week day meal)

.         lab var                 p_meal "Pulse: Meal"

.         
. * generate legumes (pulses) for day
.         egen                    p_day = total(p_dish), by(hhid week day)

.         lab var                 p_day "Pulse: Day

.         
. * generate legumes (pulses) for weak
.         egen                    p_week = total(p_dish), by(hhid week)

.         lab var                 p_week "Pulse: Week"

.         
. * generate legumes (pulses) for total
.         egen                    p_total = total(p_dish), by(hhid)

.         lab var                 p_total "Pulse: Total"

.         
.         
. ***********************************************************************
. **# 4 - generate variables for meals skipped
. *********************************************************************** 
. 
. * generate variable for total meals eaten
.         gen                                     day_temp = 1 if dish == 1
(14,420 missing values generated)

. 
.         egen                            meal_day = count(day_temp), by(hhid week day)

.         label var                       meal_day "Meals Per Day"                

.         
.         egen                            meal_week = count(day_temp), by(hhid week)

.         label var                       meal_week "Meals Per Week"      

. 
.         egen                            meal_total = count(day_temp), by(hhid)

.         label var                       meal_total "Total Meals"        

. 
. * generate variable for breakfast meals eaten   
.         gen                                     br_day_temp = 1 if meal == 0 & dish == 1
(25,813 missing values generated)

. 
.         egen                            br_day = count(br_day_temp), by(hhid week day)

.         label var                       br_day "Breakfasts Per Day"     

.         
.         egen                            br_week = count(br_day_temp), by(hhid week)

.         label var                       br_week "Breakfasts Per Week"   

. 
.         egen                            br_tot = count(br_day_temp), by(hhid)

.         label var                       br_tot "Total Breakfasts"

. 
. * generate variable for lunch meals eaten       
.         gen                                     lun_day_temp = 1 if meal == 1 & dish == 1
(24,558 missing values generated)

. 
.         egen                            lun_day = count(lun_day_temp), by(hhid week day)

.         label var                       lun_day "Lunches Per Day"       

.         
.         egen                            lun_week = count(lun_day_temp), by(hhid week)

.         label var                       lun_week "Lunches Per Week"     

. 
.         egen                            lun_tot = count(lun_day_temp), by(hhid)

.         label var                       lun_tot "Total Lunchs"

. 
. * generate variable for dinner meals eaten      
.         gen                                     din_day_temp = 1 if meal == 2 & dish == 1
(24,739 missing values generated)

. 
.         egen                            din_day = count(din_day_temp), by(hhid week day)

.         label var                       din_day "Dinners Per Day"       

.         
.         egen                            din_week = count(din_day_temp), by(hhid week)

.         label var                       din_week "Dinners Per Week"     

.          
.         egen                            din_tot = count(din_day_temp), by(hhid)

.         label var                       din_tot "Total Dinners"

.         
. * generate variables for the difference between max potential meals and total hh meals          
.         gen                             day_skip = 3 - meal_day

.         label var                       day_skip "Number of Meals Skipped in the Day"   

.         
.         gen                             week_skip = 21 - meal_week

.         label var                       week_skip "Number of Meals Skipped in the Week" 

. 
.         gen                             tot_skip = 126 - meal_total

.         label var                       tot_skip "Total Number of Meals Skipped"                

. 
. * generate variable that calculates the difference in max breakfast meals and meals a hh consumed       
.         gen                             brday_skip = 1 - br_day

.         label var                       brday_skip "Was Breakfast Skipped that Day?"    

. 
.         gen                             brweek_skip = 7 - br_week

.         label var                       brweek_skip "Number of Breakfasts Skipped in the Week"

.         
.         gen                             brtot_skip = 42 - br_tot

.         label var                       brtot_skip "Total Number of Breakfasts Skipped"

. 
. * generate variable that calculates the difference in max lunch meals and meals a hh consumed
.         gen                             lunday_skip = 1 - lun_day

.         label var                       lunday_skip "Was Lunch Skipped that Day?"       

. 
.         gen                             lunweek_skip = 7 - lun_week

.         label var                       lunweek_skip "Number of Lunches Skipped in the Week"

.                 
.         gen                             luntot_skip = 42 - lun_tot

.         label var                       luntot_skip "Total Number of Lunches Skipped"

. 
. * generate variable that calculates the difference in max dinner meals and meals a hh consumed
.         gen                             dinday_skip = 1 - din_day

.         label var                       dinday_skip "Was Dinner Skipped that Day?"      

. 
.         gen                             dinweek_skip = 7 - din_week

.         label var                       dinweek_skip "Number of Dinner Skipped in the Week"

.         
.         gen                             dintot_skip = 42 - din_tot

.         label var                       dintot_skip "Total Number of Dinners Skipped"

. 
. * drop unneeded variables
.         drop                            day_temp br_day_temp lun_day_temp din_day_temp

. 
.         
. ***********************************************************************
. **# 5 - generate variables for avg number of dishes per meal
. *********************************************************************** 
. 
. * add up total number of dishes
.         gen                                     dish_tot_temp = 1

.         
.         egen                            dish_day = count(dish_tot_temp), by(hhid week day)      

.         label var                       dish_day "Number of Dishes in a Day"

.         
.         egen                            dish_week = count(dish_tot_temp), by(hhid week) 

.         label var                       dish_week "Number of Dishes in a Week"

.         
.         egen                            dish_tot = count(dish_tot_temp), by(hhid)               

.         label var                       dish_tot "Total Number of Dishes"

.         
. * add up total number of breakfast dishes 
.         gen                                     brdish_tot_temp = 1 if meal == 0
(24,622 missing values generated)

.         
.         egen                            brdish_day = count(brdish_tot_temp), by(hhid week day)  

.         label var                       brdish_day "Number of Breakfast Dishes in a Day"

.         
.         egen                            brdish_week = count(brdish_tot_temp), by(hhid week)     

.         label var                       brdish_week "Number of Breakfast Dishes in a Week"

.         
.         egen                            brdish_tot = count(brdish_tot_temp), by(hhid)           

.         label var                       brdish_tot "Total Number of Breakfast Dishes"

.         
. * add up total number of lunch dishes
.         gen                                     lundish_tot_temp = 1 if meal == 1
(17,646 missing values generated)

.         
.         egen                            lundish_day = count(lundish_tot_temp), by(hhid week day)        

.         label var                       lundish_day "Number of Lunch Dishes in a Day"

.         
.         egen                            lundish_week = count(lundish_tot_temp), by(hhid week)   

.         label var                       lundish_week "Number of Lunch Dishes in a Week"

.         
.         egen                            lundish_tot = count(lundish_tot_temp), by(hhid)         

.         label var                       lundish_tot "Total Number of Lunch Dishes"

.         
. * add up total number of dinner dishes 
.         gen                                     dindish_tot_temp = 1 if meal == 2
(18,422 missing values generated)

.         
.         egen                            dindish_day = count(dindish_tot_temp), by(hhid week day)        

.         label var                       dindish_day "Number of Dinner Dishes in a Day"

.         
.         egen                            dindish_week = count(dindish_tot_temp), by(hhid week)   

.         label var                       dindish_week "Number of Dinner Dishes in a Week"

.         
.         egen                            dindish_tot = count(dindish_tot_temp), by(hhid)         

.         label var                       dindish_tot "Total Number of Dinner Dishes"

. 
. * drop unneeded variables
.         drop                            dish_tot_temp brdish_tot_temp lundish_tot_temp dindish_tot_temp

. 
. 
. ***********************************************************************
. **# 6 - generate meal_share variable
. ***********************************************************************         
.         
. * generate total times ss used to prepare dishes within meal
.         egen                    hh_m_use = total(ss_use), by(hhid week day meal)        

.         lab var                 hh_m_use "SS Use: Meal"

. 
. * sum of dishes per meal cooked using ANY fuel  
.         egen                    hh_m_fuel = count(dish), by(hhid week day meal)

.         lab var                 hh_m_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a meal
.         egen                    share_meal = max(hh_m_use/hh_m_fuel), by(hhid week day meal)

.         lab var                 share_meal "Share of SS Used Per Meal"

. 
. ** generate day_share variable  
. * generate a count of times ss used to prepare dishes within a day
.         egen                    hh_da_use = total(ss_use), by(hhid week day)

.         lab var                 hh_da_use "SS Use: Day"

. 
. * sum of dishes per day cooked using ANY fuel   
.         egen                    hh_da_fuel = count(dish), by(hhid week day)

.         lab var                 hh_da_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a day
.         egen                    share_day = max(hh_da_use/hh_da_fuel), by(hhid week day)        

.         lab var                 share_day "Share of SS Used Per Day"    

.         
. ** generate week_share variable                 
. * generate a count of times ss used to prepare dishes within a week
.         egen                    hh_w_use = total(ss_use), by(hhid week)

.         lab var                 hh_w_use "SS Use: Week"

.                 
. * sum of dishes per week cooked using ANY fuel  
.         egen                    hh_w_fuel = count(dish), by(hhid week)

.         lab var                 hh_w_fuel "Fuel Used: Week"     

. 
. * the share of all dishes prepared using a solar stove during a week
.         egen                    share_week = max(hh_w_use/hh_w_fuel), by(hhid week)

.         lab var                 share_week "Share of SS Used Per Week"  

.         
. ** generate tot_share variable                          
. * generate a count of times ss used to prepare dishes overall
.         egen                    hh_t_use = total(ss_use), by(hhid)

.         lab var                 hh_t_use "SS Use: Total"

.         
. * sum of overall dishes cooked using ANY fuel   
.         egen                    hh_t_fuel = count(dish), by(hhid)

.         lab var                 hh_t_fuel "Fuel Used: Total"    

. 
. * the overall share of all dishes prepared using a solar stove
.         egen                    share_total = max(hh_t_use/hh_t_fuel), by(hhid) 

.         lab var                 share_total "Share of SS Used Total"    

. 
.         
. ***********************************************************************
. **# 7 - add cloud cover data
. ***********************************************************************
. 
. * add cloud cover data
.         gen                     cc = 100 if week == 1 & village == 1
(28,998 missing values generated)

.         replace                 cc = 11.75 if week == 2 & village == 1
(1,310 real changes made)

.         replace                 cc= 99.99 if week == 3 & village == 1
(1,243 real changes made)

.         replace                 cc = 0.00 if week == 4 & village == 1
(1,151 real changes made)

.         replace                 cc = 0.00 if week == 5 & village == 1
(1,256 real changes made)

.         replace                 cc = 0.00 if week == 6 & village == 1
(1,259 real changes made)

.         replace                 cc = 100 if week == 1 & village == 0
(2,092 real changes made)

.         replace                 cc = 1.7 if week == 2 & village == 0
(1,922 real changes made)

.         replace                 cc = 2.06 if week == 3 & village == 0
(1,868 real changes made)

.         replace                 cc = 0 if week == 4 & village == 0
(2,040 real changes made)

.         replace                 cc = 0 if week == 5 & village == 0
(2,083 real changes made)

.         replace                 cc = 0.01 if week == 6 & village == 0
(2,115 real changes made)

.         replace                 cc = 100 if week == 1 & village == 2
(1,777 real changes made)

.         replace                 cc = 35.84 if week == 2 & village == 2
(1,687 real changes made)

.         replace                 cc = 0 if week == 3 & village == 2
(1,776 real changes made)

.         replace                 cc = 0 if week == 4 & village == 2
(1,766 real changes made)

.         replace                 cc = 0 if week == 5 & village == 2
(1,866 real changes made)

.         replace                 cc = 0 if week == 6 & village == 2
(1,787 real changes made)

.                 
.         lab var                 cc "Cloud Cover"        

. 
.         order                   cc, after(aas)

.         
. ***********************************************************************
. **# 8 - end matter, clean up to save
. ***********************************************************************
. 
.         lab var                         treat_assign "Solar Stove"

. 
. * prepare for export
.         compress        
  variable meal was float now byte
  variable dish was float now byte
  variable ss_use was float now byte
  variable cook was float now byte
  variable recall was float now byte
  variable ingred_dish was float now byte
  variable ingred_meal was float now byte
  variable ingred_day was float now byte
  variable ingred_week was float now byte
  variable hdds_dish was float now byte
  variable sr_dish was float now byte
  variable hdds_meal was float now byte
  variable sr_meal was float now byte
  variable hdds_day was float now byte
  variable sr_day was float now byte
  variable hdds_week was float now byte
  variable sr_week was float now byte
  variable hdds_total was float now byte
  variable sr_total was float now byte
  variable p_dish was float now byte
  variable p_meal was float now byte
  variable p_day was float now byte
  variable p_week was float now byte
  variable p_total was float now byte
  variable meal_day was float now byte
  variable meal_week was float now byte
  variable meal_total was float now int
  variable br_day was float now byte
  variable br_week was float now byte
  variable br_tot was float now byte
  variable lun_day was float now byte
  variable lun_week was float now byte
  variable lun_tot was float now byte
  variable din_day was float now byte
  variable din_week was float now byte
  variable din_tot was float now byte
  variable day_skip was float now byte
  variable week_skip was float now byte
  variable tot_skip was float now int
  variable brday_skip was float now byte
  variable brweek_skip was float now byte
  variable brtot_skip was float now byte
  variable lunday_skip was float now byte
  variable lunweek_skip was float now byte
  variable luntot_skip was float now byte
  variable dinday_skip was float now byte
  variable dinweek_skip was float now byte
  variable dintot_skip was float now byte
  variable dish_day was float now byte
  variable dish_week was float now byte
  variable dish_tot was float now int
  variable brdish_day was float now byte
  variable brdish_week was float now byte
  variable brdish_tot was float now byte
  variable lundish_day was float now byte
  variable lundish_week was float now byte
  variable lundish_tot was float now int
  variable dindish_day was float now byte
  variable dindish_week was float now byte
  variable dindish_tot was float now int
  variable hh_m_use was float now byte
  variable hh_m_fuel was float now byte
  variable hh_da_use was float now byte
  variable hh_da_fuel was float now byte
  variable hh_w_use was float now byte
  variable hh_w_fuel was float now byte
  variable hh_t_use was float now int
  variable hh_t_fuel was float now int
  (5,977,965 bytes saved)

.         save                            "$export/dietary_cleaned.dta", replace  
(file C:/Users/jdmic/git/solar_stove/data/refined/dietary_cleaned.dta not found)
file C:/Users/jdmic/git/solar_stove/data/refined/dietary_cleaned.dta saved

.         
. * close the log
.         log                                     close
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 closed on:   1 Oct 2025, 12:49:04
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 12:49:20

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,025 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,025 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
(variable english was str21, now str48 to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                            61
        from master                         1  (_merge==1)
        from using                         60  (_merge==2)

    Matched                            93,723  (_merge==3)
    -----------------------------------------

.         *** 94,269 merged, only 1 in master didn't merge
.         
.         tab                             english if _merge == 1

             English Name of Ingredient |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                        mauberry fruits |          1      100.00      100.00
----------------------------------------+-----------------------------------
                                  Total |          1      100.00

.         
.         replace                 scientific_name = "morus" if english == "mauberry fruits"
(1 real change made)

.         lab var                 scientific_name "Scientific Name"

.         
.         drop if                 _merge == 2
(60 observations deleted)

.         drop                    _merge

.         
.         encode                  scientific_name, gen(sci)

.         replace                 sci = 0 if sci == .
(27,405 real changes made)

.         lab var                 sci "Scientific Name"

.         drop                    scientific_name

.         
. * generate ingredient count per dish
.         egen                    ingred_dish = nvals(english), by(hhid week day meal dish)

.         lab var                 ingred_dish "Unique Ingredients: Dish"

.         
.         egen                    ingred_meal = nvals(english), by(hhid week day meal)

.         lab var                 ingred_meal "Unique Ingredients: Meal"

.         
.         egen                    ingred_day = nvals(english), by(hhid week day)

.         lab var                 ingred_day "Unique Ingredients: Day"

.         
.         egen                    ingred_week = nvals(english), by(hhid week)

.         lab var                 ingred_week "Unique Ingredients: Week"

.         
. * clean food group to put it into 12 categories (not 18)
.         replace                 fg = 14 if fg == 0
(0 real changes made)

.         replace                 fg = 5 if fg == 3 | fg == 4
(7,826 real changes made)

.         replace                 fg = 7 if fg == 6
(17 real changes made)

.         replace                 fg = 9 if fg == 8
(29 real changes made)

.         replace                 fg = 12 if fg == 19
(2,414 real changes made)

.         replace                 fg = 15 if fg == 17
(178 real changes made)

.         replace                 fg = 16 if fg == 18
(924 real changes made)

.         lab define              foodgroup 0 "None" 1 "Cereals" 2 "Tubers" 3 "Vitamin-A Vegetables" ///
>                                         4 "Leafy Greens" 5 "Vegetables" 6 "Vitamin-A Fruits" 7 "Fruits" ///
>                                         8 "Organ Meat" 9 "Meat" 10 "Eggs" 11 "Fish" 12 "Legumes, Nuts, & Seeds" ///
>                                         13 "Milk" 14 "Oils & Fats" 15 "Sweets" ///
>                                         16 "Spices, Condiments, & Beverages" 17 "Fried Snacks" ///
>                                         18 "Beverages", replace

.         
. 
.                                         
. ***********************************************************************
. **## 1.1 - create ingredient summary stats
. ***********************************************************************
. 
. * encode english string var into a numeric variable
.         encode                  english, gen(ingredients)

.         bys                     ingredients: gen size = _N

.         replace                 ingredients = 0 if size < 565
(5,749 real changes made)

.         lab define              ingredients 0 "other", add

.         
.         gen                             science = sci

.         replace                 science = . if science == 0
(27,405 real changes made, 27,405 to missing)

.         lab values              science sci

.         bys                     science: gen sizes = _N

.         replace                 science = 0 if sizes < 139
(1,336 real changes made)

.         lab define              sci 0 "other", add

.         
. * post frequency table of ingredients
.                 estpost tab             ingredients, sort nototal

 ingredients |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
        salt |     13702   14.61952   14.61952 
    porridge |     10520   11.22445   25.84397 
         oil |      9846   10.50531   36.34928 
       maize |      8267    8.82058   45.16986 
      tomato |      7977    8.51116   53.68102 
 maize_flour |      6056   6.461525   60.14255 
       other |      5749   6.133968   66.27651 
     cassava |      5581   5.954718   72.23123 
        fish |      3820   4.075797   76.30703 
       onion |      3792   4.045922   80.35295 
       sugar |      2679   2.858393   83.21134 
        rape |      2095   2.235287   85.44663 
   groundnut |      1954   2.084845   87.53148 
   sour_milk |      1501   1.601511   89.13299 
      cowpea |      1323   1.411591   90.54458 
cassava_le~s |      1073   1.144851   91.68943 
sweet_potato |      1025   1.093637   92.78307 
pumpkin_le~s |      1006   1.073364   93.85643 
    amaranth |       983   1.048824   94.90525 
    hibiscus |       942   1.005079   95.91033 
        rice |       869   .9271905   96.83752 
        meat |       826   .8813111   97.71883 
  tea_leaves |       817   .8717084   98.59054 
     pumpkin |       756   .8066237   99.39717 
        okra |       565   .6028339        100 

.          
. * code for latex tables
.         esttab                  using "$output/ing_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "the top 25 ingredient was recorded in the food diaries and 
> the relative " ///
>                                                         "frequency of that ingredient in the entire data set. In tot
> al " ///
>                                                         "111 different ingredients were recorded, excluding water.} 
>  \end{tabular}")    
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/ing_tab.tex)

. 
. * post frequency table of food groups
.                 estpost tab                     fg, sort nototal

          fg |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
           1 |     26171   27.92348   27.92348 
           5 |     21003   22.40941   50.33289 
          16 |     18210   19.42939   69.76228 
          14 |     10065   10.73898   80.50126 
           2 |      6667   7.113439    87.6147 
          12 |      4196   4.476975   92.09167 
          11 |      3820   4.075797   96.16747 
          13 |      1804     1.9248   98.09227 
           9 |      1123   1.198199   99.29047 
          10 |       329   .3510307    99.6415 
          15 |       190   .2027229   99.84422 
           7 |       146   .1557765        100 

row labels saved in macro e(labels)

.         
. * output table of food group frequencies
.                 esttab                   using "$output/fg_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment varlabels(`e(labels)') ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a food group is represented in the food diaries. There are 
> 12 " ///
>                                                         "total food groups.}  \end{tabular}")           
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/fg_tab.tex)

.         
. * post frequency table of species
.                 estpost tab                     science, sort nototal

     science |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
    zea_mays |     24925    37.5835    37.5835 
lycopersic~m |      7977   12.02823   49.61173 
manihot_es~a |      6666   10.05142   59.66314 
    fish_spp |      3820   5.760039   65.42318 
allium_cep~l |      3792   5.717818     71.141 
bos_tau~1758 |      2666   4.019964   75.16096 
cucurbuta_~o |      2196   3.311268   78.47223 
brassica_r~a |      2095   3.158974   81.63121 
arachis_hy~a |      1954   2.946365   84.57757 
       other |      1336   2.014506   86.59208 
vigna_ungu~p |      1327   2.000935   88.59301 
ipomoea_ba~s |      1324   1.996411   90.58942 
amaranthus~p |       983    1.48223   92.07165 
hibiscus_a~a |       942   1.420407   93.49206 
oryza_sati~l |       869   1.310333   94.80239 
aromatic_spp |       817   1.231924   96.03432 
gallus_~1758 |       570   .8594822    96.8938 
abelmoschu~s |       567   .8549586   97.74876 
lactarius_~p |       374    .563941    98.3127 
phaseolus_~l |       291   .4387883   98.75149 
cenchrus_a~s |       268   .4041074    99.1556 
schinzioph~i |       202   .3045884   99.46018 
brassica_o~a |       182   .2744312   99.73462 
cucurbita_~a |       176    .265384        100 

.         
. * output table of processed food frequencies
.                 esttab                   using "$output/sci_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       66,3190&      100 \\ 
> " ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a species is represented in the food diaries. There are 63 
> " ///
>                                                         "unique species total.}  \end{tabular}")                    
>             
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/sci_tab.tex)

.         
.         
. ***********************************************************************
. **# 2 - generate variables for final hdds outcomes
. ***********************************************************************         
.                 
. * generate hdds and sr for dish
.         egen                    hdds_dish = nvals(fg), by(hhid week day meal dish)

.         lab var                 hdds_dish "HDDS: Dish"

.         egen                    sr_dish   = nvals(sci), by(hhid week day meal dish)

.         lab var                 sr_dish "SR: Dish"

.         
.         egen                    hdds_avg_dish = mean(hdds_dish), by(hhid)

.         lab var                 hdds_avg_dish "HDDS: Average Dish"

.         egen                    sr_avg_dish = mean(sr_dish), by(hhid)

.         lab var                 sr_avg_dish "SR: Average Dish"

.         
. * generate hdds and sr for meal
.         egen                    hdds_meal = nvals(fg), by(hhid week day meal)

.         lab var                 hdds_meal "HDDS: Meal"

.         egen                    sr_meal   = nvals(sci), by(hhid week day meal)

.         lab var                 sr_meal "SR: Meal"

.         
.         egen                    hdds_avg_meal = mean(hdds_meal), by(hhid)

.         lab var                 hdds_avg_meal "HDDS: Average Meal"

.         egen                    sr_avg_meal = mean(sr_meal), by(hhid)

.         lab var                 sr_avg_meal "SR: Average Meal"

.         
. * generate hdds and sr for day
.         egen                    hdds_day = nvals(fg), by(hhid week day)

.         lab var                 hdds_day "HDDS: Day"

.         egen                    sr_day   = nvals(sci), by(hhid week day)

.         lab var                 sr_day "SR: Day"

.         
.         egen                    hdds_avg_day = mean(hdds_day), by(hhid)

.         lab var                 hdds_avg_day "HDDS: Average Day"

.         egen                    sr_avg_day = mean(sr_day), by(hhid)

.         lab var                 sr_avg_day "SR: Average Day"

.         
. * generate hdds and sr for week
.         egen                    hdds_week = nvals(fg), by(hhid week)

.         lab var                 hdds_week "HDDS: Week"

.         egen                    sr_week   = nvals(sci), by(hhid week)

.         lab var                 sr_week "SR: Week"

.         
.         egen                    hdds_avg_week = mean(hdds_week), by(hhid)

.         lab var                 hdds_avg_week "HDDS: Average Week"

.         egen                    sr_avg_week = mean(sr_week), by(hhid)

.         lab var                 sr_avg_week "SR: Average Week"

. 
. * generate hdds and sr for total
.         egen                    hdds_total = nvals(fg), by(hhid)

.         lab var                 hdds_total "HDDS: Total"

.         egen                    sr_total   = nvals(sci), by(hhid)       

.         lab var                 sr_total "SR: Total"

. 
.         
. ***********************************************************************
. **# 3 - generate legume variables and collapse
. ***********************************************************************         
. 
.         collapse                (max) legumes, ///
>                                         by(village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook hdds_dish sr_dish ///
>                                                 hdds_avg_dish sr_avg_dish hdds_meal ///
>                                                 sr_meal hdds_avg_meal sr_avg_meal hdds_day sr_day ///
>                                                 hdds_avg_day sr_avg_day hdds_week sr_week hdds_avg_week ///
>                                                 sr_avg_week hdds_total sr_total ingred_dish ingred_meal ///
>                                                 ingred_day ingred_week recall)

.         
.         lab var                 legumes "Where Legumes Eaten?"

.         
.         isid                    hhid week day meal dish

.         
. * generate legumes (pulses) for dish
.         rename                  legumes p_dish

.         lab var                 p_dish "Pulse: Dish"

.         
. * generate legumes (pulses) for meal
.         egen                    p_meal = total(p_dish), by(hhid week day meal)

.         lab var                 p_meal "Pulse: Meal"

.         
. * generate legumes (pulses) for day
.         egen                    p_day = total(p_dish), by(hhid week day)

.         lab var                 p_day "Pulse: Day

.         
. * generate legumes (pulses) for weak
.         egen                    p_week = total(p_dish), by(hhid week)

.         lab var                 p_week "Pulse: Week"

.         
. * generate legumes (pulses) for total
.         egen                    p_total = total(p_dish), by(hhid)

.         lab var                 p_total "Pulse: Total"

.         
.         
. ***********************************************************************
. **# 4 - generate variables for meals skipped
. *********************************************************************** 
. 
. * generate variable for total meals eaten
.         gen                                     day_temp = 1 if dish == 1
(14,420 missing values generated)

. 
.         egen                            meal_day = count(day_temp), by(hhid week day)

.         label var                       meal_day "Meals Per Day"                

.         
.         egen                            meal_week = count(day_temp), by(hhid week)

.         label var                       meal_week "Meals Per Week"      

. 
.         egen                            meal_total = count(day_temp), by(hhid)

.         label var                       meal_total "Total Meals"        

. 
. * generate variable for breakfast meals eaten   
.         gen                                     br_day_temp = 1 if meal == 0 & dish == 1
(25,813 missing values generated)

. 
.         egen                            br_day = count(br_day_temp), by(hhid week day)

.         label var                       br_day "Breakfasts Per Day"     

.         
.         egen                            br_week = count(br_day_temp), by(hhid week)

.         label var                       br_week "Breakfasts Per Week"   

. 
.         egen                            br_tot = count(br_day_temp), by(hhid)

.         label var                       br_tot "Total Breakfasts"

. 
. * generate variable for lunch meals eaten       
.         gen                                     lun_day_temp = 1 if meal == 1 & dish == 1
(24,558 missing values generated)

. 
.         egen                            lun_day = count(lun_day_temp), by(hhid week day)

.         label var                       lun_day "Lunches Per Day"       

.         
.         egen                            lun_week = count(lun_day_temp), by(hhid week)

.         label var                       lun_week "Lunches Per Week"     

. 
.         egen                            lun_tot = count(lun_day_temp), by(hhid)

.         label var                       lun_tot "Total Lunchs"

. 
. * generate variable for dinner meals eaten      
.         gen                                     din_day_temp = 1 if meal == 2 & dish == 1
(24,739 missing values generated)

. 
.         egen                            din_day = count(din_day_temp), by(hhid week day)

.         label var                       din_day "Dinners Per Day"       

.         
.         egen                            din_week = count(din_day_temp), by(hhid week)

.         label var                       din_week "Dinners Per Week"     

.          
.         egen                            din_tot = count(din_day_temp), by(hhid)

.         label var                       din_tot "Total Dinners"

.         
. * generate variables for the difference between max potential meals and total hh meals          
.         gen                             day_skip = 3 - meal_day

.         label var                       day_skip "Number of Meals Skipped in the Day"   

.         
.         gen                             week_skip = 21 - meal_week

.         label var                       week_skip "Number of Meals Skipped in the Week" 

. 
.         gen                             tot_skip = 126 - meal_total

.         label var                       tot_skip "Total Number of Meals Skipped"                

. 
. * generate variable that calculates the difference in max breakfast meals and meals a hh consumed       
.         gen                             brday_skip = 1 - br_day

.         label var                       brday_skip "Was Breakfast Skipped that Day?"    

. 
.         gen                             brweek_skip = 7 - br_week

.         label var                       brweek_skip "Number of Breakfasts Skipped in the Week"

.         
.         gen                             brtot_skip = 42 - br_tot

.         label var                       brtot_skip "Total Number of Breakfasts Skipped"

. 
. * generate variable that calculates the difference in max lunch meals and meals a hh consumed
.         gen                             lunday_skip = 1 - lun_day

.         label var                       lunday_skip "Was Lunch Skipped that Day?"       

. 
.         gen                             lunweek_skip = 7 - lun_week

.         label var                       lunweek_skip "Number of Lunches Skipped in the Week"

.                 
.         gen                             luntot_skip = 42 - lun_tot

.         label var                       luntot_skip "Total Number of Lunches Skipped"

. 
. * generate variable that calculates the difference in max dinner meals and meals a hh consumed
.         gen                             dinday_skip = 1 - din_day

.         label var                       dinday_skip "Was Dinner Skipped that Day?"      

. 
.         gen                             dinweek_skip = 7 - din_week

.         label var                       dinweek_skip "Number of Dinner Skipped in the Week"

.         
.         gen                             dintot_skip = 42 - din_tot

.         label var                       dintot_skip "Total Number of Dinners Skipped"

. 
. * drop unneeded variables
.         drop                            day_temp br_day_temp lun_day_temp din_day_temp

. 
.         
. ***********************************************************************
. **# 5 - generate variables for avg number of dishes per meal
. *********************************************************************** 
. 
. * add up total number of dishes
.         gen                                     dish_tot_temp = 1

.         
.         egen                            dish_day = count(dish_tot_temp), by(hhid week day)      

.         label var                       dish_day "Number of Dishes in a Day"

.         
.         egen                            dish_week = count(dish_tot_temp), by(hhid week) 

.         label var                       dish_week "Number of Dishes in a Week"

.         
.         egen                            dish_tot = count(dish_tot_temp), by(hhid)               

.         label var                       dish_tot "Total Number of Dishes"

.         
. * add up total number of breakfast dishes 
.         gen                                     brdish_tot_temp = 1 if meal == 0
(24,622 missing values generated)

.         
.         egen                            brdish_day = count(brdish_tot_temp), by(hhid week day)  

.         label var                       brdish_day "Number of Breakfast Dishes in a Day"

.         
.         egen                            brdish_week = count(brdish_tot_temp), by(hhid week)     

.         label var                       brdish_week "Number of Breakfast Dishes in a Week"

.         
.         egen                            brdish_tot = count(brdish_tot_temp), by(hhid)           

.         label var                       brdish_tot "Total Number of Breakfast Dishes"

.         
. * add up total number of lunch dishes
.         gen                                     lundish_tot_temp = 1 if meal == 1
(17,646 missing values generated)

.         
.         egen                            lundish_day = count(lundish_tot_temp), by(hhid week day)        

.         label var                       lundish_day "Number of Lunch Dishes in a Day"

.         
.         egen                            lundish_week = count(lundish_tot_temp), by(hhid week)   

.         label var                       lundish_week "Number of Lunch Dishes in a Week"

.         
.         egen                            lundish_tot = count(lundish_tot_temp), by(hhid)         

.         label var                       lundish_tot "Total Number of Lunch Dishes"

.         
. * add up total number of dinner dishes 
.         gen                                     dindish_tot_temp = 1 if meal == 2
(18,422 missing values generated)

.         
.         egen                            dindish_day = count(dindish_tot_temp), by(hhid week day)        

.         label var                       dindish_day "Number of Dinner Dishes in a Day"

.         
.         egen                            dindish_week = count(dindish_tot_temp), by(hhid week)   

.         label var                       dindish_week "Number of Dinner Dishes in a Week"

.         
.         egen                            dindish_tot = count(dindish_tot_temp), by(hhid)         

.         label var                       dindish_tot "Total Number of Dinner Dishes"

. 
. * drop unneeded variables
.         drop                            dish_tot_temp brdish_tot_temp lundish_tot_temp dindish_tot_temp

. 
. 
. ***********************************************************************
. **# 6 - generate meal_share variable
. ***********************************************************************         
.         
. * generate total times ss used to prepare dishes within meal
.         egen                    hh_m_use = total(ss_use), by(hhid week day meal)        

.         lab var                 hh_m_use "SS Use: Meal"

. 
. * sum of dishes per meal cooked using ANY fuel  
.         egen                    hh_m_fuel = count(dish), by(hhid week day meal)

.         lab var                 hh_m_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a meal
.         egen                    share_meal = max(hh_m_use/hh_m_fuel), by(hhid week day meal)

.         lab var                 share_meal "Share of SS Used Per Meal"

. 
. ** generate day_share variable  
. * generate a count of times ss used to prepare dishes within a day
.         egen                    hh_da_use = total(ss_use), by(hhid week day)

.         lab var                 hh_da_use "SS Use: Day"

. 
. * sum of dishes per day cooked using ANY fuel   
.         egen                    hh_da_fuel = count(dish), by(hhid week day)

.         lab var                 hh_da_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a day
.         egen                    share_day = max(hh_da_use/hh_da_fuel), by(hhid week day)        

.         lab var                 share_day "Share of SS Used Per Day"    

.         
. ** generate week_share variable                 
. * generate a count of times ss used to prepare dishes within a week
.         egen                    hh_w_use = total(ss_use), by(hhid week)

.         lab var                 hh_w_use "SS Use: Week"

.                 
. * sum of dishes per week cooked using ANY fuel  
.         egen                    hh_w_fuel = count(dish), by(hhid week)

.         lab var                 hh_w_fuel "Fuel Used: Week"     

. 
. * the share of all dishes prepared using a solar stove during a week
.         egen                    share_week = max(hh_w_use/hh_w_fuel), by(hhid week)

.         lab var                 share_week "Share of SS Used Per Week"  

.         
. ** generate tot_share variable                          
. * generate a count of times ss used to prepare dishes overall
.         egen                    hh_t_use = total(ss_use), by(hhid)

.         lab var                 hh_t_use "SS Use: Total"

.         
. * sum of overall dishes cooked using ANY fuel   
.         egen                    hh_t_fuel = count(dish), by(hhid)

.         lab var                 hh_t_fuel "Fuel Used: Total"    

. 
. * the overall share of all dishes prepared using a solar stove
.         egen                    share_total = max(hh_t_use/hh_t_fuel), by(hhid) 

.         lab var                 share_total "Share of SS Used Total"    

. 
.         
. ***********************************************************************
. **# 7 - add cloud cover data
. ***********************************************************************
. 
. * add cloud cover data
.         gen                     cc = 100 if week == 1 & village == 1
(28,998 missing values generated)

.         replace                 cc = 11.75 if week == 2 & village == 1
(1,310 real changes made)

.         replace                 cc= 99.99 if week == 3 & village == 1
(1,243 real changes made)

.         replace                 cc = 0.00 if week == 4 & village == 1
(1,151 real changes made)

.         replace                 cc = 0.00 if week == 5 & village == 1
(1,256 real changes made)

.         replace                 cc = 0.00 if week == 6 & village == 1
(1,259 real changes made)

.         replace                 cc = 100 if week == 1 & village == 0
(2,092 real changes made)

.         replace                 cc = 1.7 if week == 2 & village == 0
(1,922 real changes made)

.         replace                 cc = 2.06 if week == 3 & village == 0
(1,868 real changes made)

.         replace                 cc = 0 if week == 4 & village == 0
(2,040 real changes made)

.         replace                 cc = 0 if week == 5 & village == 0
(2,083 real changes made)

.         replace                 cc = 0.01 if week == 6 & village == 0
(2,115 real changes made)

.         replace                 cc = 100 if week == 1 & village == 2
(1,777 real changes made)

.         replace                 cc = 35.84 if week == 2 & village == 2
(1,687 real changes made)

.         replace                 cc = 0 if week == 3 & village == 2
(1,776 real changes made)

.         replace                 cc = 0 if week == 4 & village == 2
(1,766 real changes made)

.         replace                 cc = 0 if week == 5 & village == 2
(1,866 real changes made)

.         replace                 cc = 0 if week == 6 & village == 2
(1,787 real changes made)

.                 
.         lab var                 cc "Cloud Cover"        

. 
.         order                   cc, after(aas)

.         
. ***********************************************************************
. **# 8 - end matter, clean up to save
. ***********************************************************************
. 
.         lab var                         treat_assign "Solar Stove"

. 
. * prepare for export
.         compress        
  variable meal was float now byte
  variable dish was float now byte
  variable ss_use was float now byte
  variable cook was float now byte
  variable recall was float now byte
  variable ingred_dish was float now byte
  variable ingred_meal was float now byte
  variable ingred_day was float now byte
  variable ingred_week was float now byte
  variable hdds_dish was float now byte
  variable sr_dish was float now byte
  variable hdds_meal was float now byte
  variable sr_meal was float now byte
  variable hdds_day was float now byte
  variable sr_day was float now byte
  variable hdds_week was float now byte
  variable sr_week was float now byte
  variable hdds_total was float now byte
  variable sr_total was float now byte
  variable p_dish was float now byte
  variable p_meal was float now byte
  variable p_day was float now byte
  variable p_week was float now byte
  variable p_total was float now byte
  variable meal_day was float now byte
  variable meal_week was float now byte
  variable meal_total was float now int
  variable br_day was float now byte
  variable br_week was float now byte
  variable br_tot was float now byte
  variable lun_day was float now byte
  variable lun_week was float now byte
  variable lun_tot was float now byte
  variable din_day was float now byte
  variable din_week was float now byte
  variable din_tot was float now byte
  variable day_skip was float now byte
  variable week_skip was float now byte
  variable tot_skip was float now int
  variable brday_skip was float now byte
  variable brweek_skip was float now byte
  variable brtot_skip was float now byte
  variable lunday_skip was float now byte
  variable lunweek_skip was float now byte
  variable luntot_skip was float now byte
  variable dinday_skip was float now byte
  variable dinweek_skip was float now byte
  variable dintot_skip was float now byte
  variable dish_day was float now byte
  variable dish_week was float now byte
  variable dish_tot was float now int
  variable brdish_day was float now byte
  variable brdish_week was float now byte
  variable brdish_tot was float now byte
  variable lundish_day was float now byte
  variable lundish_week was float now byte
  variable lundish_tot was float now int
  variable dindish_day was float now byte
  variable dindish_week was float now byte
  variable dindish_tot was float now int
  variable hh_m_use was float now byte
  variable hh_m_fuel was float now byte
  variable hh_da_use was float now byte
  variable hh_da_fuel was float now byte
  variable hh_w_use was float now byte
  variable hh_w_fuel was float now byte
  variable hh_t_use was float now int
  variable hh_t_fuel was float now int
  (5,977,965 bytes saved)

.         save                            "$export/dietary_cleaned.dta", replace  
file C:/Users/jdmic/git/solar_stove/data/refined/dietary_cleaned.dta saved

.         
. * close the log
.         log                                     close
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 closed on:   1 Oct 2025, 12:49:34
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 13:01:22

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,035 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,035 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
(variable english was str21, now str48 to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                            61
        from master                         1  (_merge==1)
        from using                         60  (_merge==2)

    Matched                            93,723  (_merge==3)
    -----------------------------------------

.         *** 94,269 merged, only 1 in master didn't merge
.         
.         tab                             english if _merge == 1

             English Name of Ingredient |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                        mauberry fruits |          1      100.00      100.00
----------------------------------------+-----------------------------------
                                  Total |          1      100.00

.         
.         replace                 scientific_name = "morus" if english == "mauberry fruits"
(1 real change made)

.         lab var                 scientific_name "Scientific Name"

.         
.         drop if                 _merge == 2
(60 observations deleted)

.         drop                    _merge

.         
.         encode                  scientific_name, gen(sci)

.         replace                 sci = 0 if sci == .
(27,405 real changes made)

.         lab var                 sci "Scientific Name"

.         drop                    scientific_name

.         
. * generate ingredient count per dish
.         egen                    ingred_dish = nvals(english), by(hhid week day meal dish)

.         lab var                 ingred_dish "Unique Ingredients: Dish"

.         
.         egen                    ingred_meal = nvals(english), by(hhid week day meal)

.         lab var                 ingred_meal "Unique Ingredients: Meal"

.         
.         egen                    ingred_day = nvals(english), by(hhid week day)

.         lab var                 ingred_day "Unique Ingredients: Day"

.         
.         egen                    ingred_week = nvals(english), by(hhid week)

.         lab var                 ingred_week "Unique Ingredients: Week"

.         
. * clean food group to put it into 12 categories (not 18)
.         replace                 fg = 14 if fg == 0
(5 real changes made)

.         replace                 fg = 5 if fg == 3 | fg == 4
(7,826 real changes made)

.         replace                 fg = 7 if fg == 6
(17 real changes made)

.         replace                 fg = 9 if fg == 8
(29 real changes made)

.         replace                 fg = 12 if fg == 19
(2,414 real changes made)

.         replace                 fg = 15 if fg == 17
(178 real changes made)

.         replace                 fg = 16 if fg == 18
(929 real changes made)

.         lab define              foodgroup 0 "None" 1 "Cereals" 2 "Tubers" 3 "Vitamin-A Vegetables" ///
>                                         4 "Leafy Greens" 5 "Vegetables" 6 "Vitamin-A Fruits" 7 "Fruits" ///
>                                         8 "Organ Meat" 9 "Meat" 10 "Eggs" 11 "Fish" 12 "Legumes, Nuts, & Seeds" ///
>                                         13 "Milk" 14 "Oils & Fats" 15 "Sweets" ///
>                                         16 "Spices, Condiments, & Beverages" 17 "Fried Snacks" ///
>                                         18 "Beverages", replace

.         
. 
.                                         
. ***********************************************************************
. **## 1.1 - create ingredient summary stats
. ***********************************************************************
. 
. * encode english string var into a numeric variable
.         encode                  english, gen(ingredients)

.         bys                     ingredients: gen size = _N

.         replace                 ingredients = 0 if size < 565
(5,749 real changes made)

.         lab define              ingredients 0 "other", add

.         
.         gen                             science = sci

.         replace                 science = . if science == 0
(27,405 real changes made, 27,405 to missing)

.         lab values              science sci

.         bys                     science: gen sizes = _N

.         replace                 science = 0 if sizes < 139
(1,336 real changes made)

.         lab define              sci 0 "other", add

.         
. * post frequency table of ingredients
.                 estpost tab             ingredients, sort nototal

 ingredients |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
        salt |     13702   14.61952   14.61952 
    porridge |     10520   11.22445   25.84397 
         oil |      9846   10.50531   36.34928 
       maize |      8267    8.82058   45.16986 
      tomato |      7977    8.51116   53.68102 
 maize_flour |      6056   6.461525   60.14255 
       other |      5749   6.133968   66.27651 
     cassava |      5581   5.954718   72.23123 
        fish |      3820   4.075797   76.30703 
       onion |      3792   4.045922   80.35295 
       sugar |      2679   2.858393   83.21134 
        rape |      2095   2.235287   85.44663 
   groundnut |      1954   2.084845   87.53148 
   sour_milk |      1501   1.601511   89.13299 
      cowpea |      1323   1.411591   90.54458 
cassava_le~s |      1073   1.144851   91.68943 
sweet_potato |      1025   1.093637   92.78307 
pumpkin_le~s |      1006   1.073364   93.85643 
    amaranth |       983   1.048824   94.90525 
    hibiscus |       942   1.005079   95.91033 
        rice |       869   .9271905   96.83752 
        meat |       826   .8813111   97.71883 
  tea_leaves |       817   .8717084   98.59054 
     pumpkin |       756   .8066237   99.39717 
        okra |       565   .6028339        100 

.          
. * code for latex tables
.         esttab                  using "$output/ing_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "the top 25 ingredient was recorded in the food diaries and 
> the relative " ///
>                                                         "frequency of that ingredient in the entire data set. In tot
> al " ///
>                                                         "111 different ingredients were recorded, excluding water.} 
>  \end{tabular}")    
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/ing_tab.tex)

. 
. * post frequency table of food groups
.                 estpost tab                     fg, sort nototal

          fg |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
           1 |     26171   27.92348   27.92348 
           5 |     21003   22.40941   50.33289 
          16 |     18215   19.43472   69.76762 
          14 |     10070   10.74431   80.51193 
           2 |      6667   7.113439   87.62537 
          12 |      4186   4.466305   92.09167 
          11 |      3820   4.075797   96.16747 
          13 |      1804     1.9248   98.09227 
           9 |      1123   1.198199   99.29047 
          10 |       329   .3510307    99.6415 
          15 |       190   .2027229   99.84422 
           7 |       146   .1557765        100 

row labels saved in macro e(labels)

.         
. * output table of food group frequencies
.                 esttab                   using "$output/fg_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment varlabels(`e(labels)') ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a food group is represented in the food diaries. There are 
> 12 " ///
>                                                         "total food groups.}  \end{tabular}")           
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/fg_tab.tex)

.         
. * post frequency table of species
.                 estpost tab                     science, sort nototal

     science |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
    zea_mays |     24925    37.5835    37.5835 
lycopersic~m |      7977   12.02823   49.61173 
manihot_es~a |      6666   10.05142   59.66314 
    fish_spp |      3820   5.760039   65.42318 
allium_cep~l |      3792   5.717818     71.141 
bos_tau~1758 |      2666   4.019964   75.16096 
cucurbuta_~o |      2196   3.311268   78.47223 
brassica_r~a |      2095   3.158974   81.63121 
arachis_hy~a |      1954   2.946365   84.57757 
       other |      1336   2.014506   86.59208 
vigna_ungu~p |      1327   2.000935   88.59301 
ipomoea_ba~s |      1324   1.996411   90.58942 
amaranthus~p |       983    1.48223   92.07165 
hibiscus_a~a |       942   1.420407   93.49206 
oryza_sati~l |       869   1.310333   94.80239 
aromatic_spp |       817   1.231924   96.03432 
gallus_~1758 |       570   .8594822    96.8938 
abelmoschu~s |       567   .8549586   97.74876 
lactarius_~p |       374    .563941    98.3127 
phaseolus_~l |       291   .4387883   98.75149 
cenchrus_a~s |       268   .4041074    99.1556 
schinzioph~i |       202   .3045884   99.46018 
brassica_o~a |       182   .2744312   99.73462 
cucurbita_~a |       176    .265384        100 

.         
. * output table of processed food frequencies
.                 esttab                   using "$output/sci_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       66,3190&      100 \\ 
> " ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a species is represented in the food diaries. There are 63 
> " ///
>                                                         "unique species total.}  \end{tabular}")                    
>             
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/sci_tab.tex)

.         
.         
. ***********************************************************************
. **# 2 - generate variables for final hdds outcomes
. ***********************************************************************         
.                 
. * generate hdds and sr for dish
.         egen                    hdds_dish = nvals(fg), by(hhid week day meal dish)

.         lab var                 hdds_dish "HDDS: Dish"

.         egen                    sr_dish   = nvals(sci), by(hhid week day meal dish)

.         lab var                 sr_dish "SR: Dish"

.         
.         egen                    hdds_avg_dish = mean(hdds_dish), by(hhid)

.         lab var                 hdds_avg_dish "HDDS: Average Dish"

.         egen                    sr_avg_dish = mean(sr_dish), by(hhid)

.         lab var                 sr_avg_dish "SR: Average Dish"

.         
. * generate hdds and sr for meal
.         egen                    hdds_meal = nvals(fg), by(hhid week day meal)

.         lab var                 hdds_meal "HDDS: Meal"

.         egen                    sr_meal   = nvals(sci), by(hhid week day meal)

.         lab var                 sr_meal "SR: Meal"

.         
.         egen                    hdds_avg_meal = mean(hdds_meal), by(hhid)

.         lab var                 hdds_avg_meal "HDDS: Average Meal"

.         egen                    sr_avg_meal = mean(sr_meal), by(hhid)

.         lab var                 sr_avg_meal "SR: Average Meal"

.         
. * generate hdds and sr for day
.         egen                    hdds_day = nvals(fg), by(hhid week day)

.         lab var                 hdds_day "HDDS: Day"

.         egen                    sr_day   = nvals(sci), by(hhid week day)

.         lab var                 sr_day "SR: Day"

.         
.         egen                    hdds_avg_day = mean(hdds_day), by(hhid)

.         lab var                 hdds_avg_day "HDDS: Average Day"

.         egen                    sr_avg_day = mean(sr_day), by(hhid)

.         lab var                 sr_avg_day "SR: Average Day"

.         
. * generate hdds and sr for week
.         egen                    hdds_week = nvals(fg), by(hhid week)

.         lab var                 hdds_week "HDDS: Week"

.         egen                    sr_week   = nvals(sci), by(hhid week)

.         lab var                 sr_week "SR: Week"

.         
.         egen                    hdds_avg_week = mean(hdds_week), by(hhid)

.         lab var                 hdds_avg_week "HDDS: Average Week"

.         egen                    sr_avg_week = mean(sr_week), by(hhid)

.         lab var                 sr_avg_week "SR: Average Week"

. 
. * generate hdds and sr for total
.         egen                    hdds_total = nvals(fg), by(hhid)

.         lab var                 hdds_total "HDDS: Total"

.         egen                    sr_total   = nvals(sci), by(hhid)       

.         lab var                 sr_total "SR: Total"

. 
.         
. ***********************************************************************
. **# 3 - generate legume variables and collapse
. ***********************************************************************         
. 
.         collapse                (max) legumes, ///
>                                         by(village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook hdds_dish sr_dish ///
>                                                 hdds_avg_dish sr_avg_dish hdds_meal ///
>                                                 sr_meal hdds_avg_meal sr_avg_meal hdds_day sr_day ///
>                                                 hdds_avg_day sr_avg_day hdds_week sr_week hdds_avg_week ///
>                                                 sr_avg_week hdds_total sr_total ingred_dish ingred_meal ///
>                                                 ingred_day ingred_week recall)

.         
.         lab var                 legumes "Where Legumes Eaten?"

.         
.         isid                    hhid week day meal dish

.         
. * generate legumes (pulses) for dish
.         rename                  legumes p_dish

.         lab var                 p_dish "Pulse: Dish"

.         
. * generate legumes (pulses) for meal
.         egen                    p_meal = total(p_dish), by(hhid week day meal)

.         lab var                 p_meal "Pulse: Meal"

.         
. * generate legumes (pulses) for day
.         egen                    p_day = total(p_dish), by(hhid week day)

.         lab var                 p_day "Pulse: Day

.         
. * generate legumes (pulses) for weak
.         egen                    p_week = total(p_dish), by(hhid week)

.         lab var                 p_week "Pulse: Week"

.         
. * generate legumes (pulses) for total
.         egen                    p_total = total(p_dish), by(hhid)

.         lab var                 p_total "Pulse: Total"

.         
.         
. ***********************************************************************
. **# 4 - generate variables for meals skipped
. *********************************************************************** 
. 
. * generate variable for total meals eaten
.         gen                                     day_temp = 1 if dish == 1
(14,420 missing values generated)

. 
.         egen                            meal_day = count(day_temp), by(hhid week day)

.         label var                       meal_day "Meals Per Day"                

.         
.         egen                            meal_week = count(day_temp), by(hhid week)

.         label var                       meal_week "Meals Per Week"      

. 
.         egen                            meal_total = count(day_temp), by(hhid)

.         label var                       meal_total "Total Meals"        

. 
. * generate variable for breakfast meals eaten   
.         gen                                     br_day_temp = 1 if meal == 0 & dish == 1
(25,813 missing values generated)

. 
.         egen                            br_day = count(br_day_temp), by(hhid week day)

.         label var                       br_day "Breakfasts Per Day"     

.         
.         egen                            br_week = count(br_day_temp), by(hhid week)

.         label var                       br_week "Breakfasts Per Week"   

. 
.         egen                            br_tot = count(br_day_temp), by(hhid)

.         label var                       br_tot "Total Breakfasts"

. 
. * generate variable for lunch meals eaten       
.         gen                                     lun_day_temp = 1 if meal == 1 & dish == 1
(24,558 missing values generated)

. 
.         egen                            lun_day = count(lun_day_temp), by(hhid week day)

.         label var                       lun_day "Lunches Per Day"       

.         
.         egen                            lun_week = count(lun_day_temp), by(hhid week)

.         label var                       lun_week "Lunches Per Week"     

. 
.         egen                            lun_tot = count(lun_day_temp), by(hhid)

.         label var                       lun_tot "Total Lunchs"

. 
. * generate variable for dinner meals eaten      
.         gen                                     din_day_temp = 1 if meal == 2 & dish == 1
(24,739 missing values generated)

. 
.         egen                            din_day = count(din_day_temp), by(hhid week day)

.         label var                       din_day "Dinners Per Day"       

.         
.         egen                            din_week = count(din_day_temp), by(hhid week)

.         label var                       din_week "Dinners Per Week"     

.          
.         egen                            din_tot = count(din_day_temp), by(hhid)

.         label var                       din_tot "Total Dinners"

.         
. * generate variables for the difference between max potential meals and total hh meals          
.         gen                             day_skip = 3 - meal_day

.         label var                       day_skip "Number of Meals Skipped in the Day"   

.         
.         gen                             week_skip = 21 - meal_week

.         label var                       week_skip "Number of Meals Skipped in the Week" 

. 
.         gen                             tot_skip = 126 - meal_total

.         label var                       tot_skip "Total Number of Meals Skipped"                

. 
. * generate variable that calculates the difference in max breakfast meals and meals a hh consumed       
.         gen                             brday_skip = 1 - br_day

.         label var                       brday_skip "Was Breakfast Skipped that Day?"    

. 
.         gen                             brweek_skip = 7 - br_week

.         label var                       brweek_skip "Number of Breakfasts Skipped in the Week"

.         
.         gen                             brtot_skip = 42 - br_tot

.         label var                       brtot_skip "Total Number of Breakfasts Skipped"

. 
. * generate variable that calculates the difference in max lunch meals and meals a hh consumed
.         gen                             lunday_skip = 1 - lun_day

.         label var                       lunday_skip "Was Lunch Skipped that Day?"       

. 
.         gen                             lunweek_skip = 7 - lun_week

.         label var                       lunweek_skip "Number of Lunches Skipped in the Week"

.                 
.         gen                             luntot_skip = 42 - lun_tot

.         label var                       luntot_skip "Total Number of Lunches Skipped"

. 
. * generate variable that calculates the difference in max dinner meals and meals a hh consumed
.         gen                             dinday_skip = 1 - din_day

.         label var                       dinday_skip "Was Dinner Skipped that Day?"      

. 
.         gen                             dinweek_skip = 7 - din_week

.         label var                       dinweek_skip "Number of Dinner Skipped in the Week"

.         
.         gen                             dintot_skip = 42 - din_tot

.         label var                       dintot_skip "Total Number of Dinners Skipped"

. 
. * drop unneeded variables
.         drop                            day_temp br_day_temp lun_day_temp din_day_temp

. 
.         
. ***********************************************************************
. **# 5 - generate variables for avg number of dishes per meal
. *********************************************************************** 
. 
. * add up total number of dishes
.         gen                                     dish_tot_temp = 1

.         
.         egen                            dish_day = count(dish_tot_temp), by(hhid week day)      

.         label var                       dish_day "Number of Dishes in a Day"

.         
.         egen                            dish_week = count(dish_tot_temp), by(hhid week) 

.         label var                       dish_week "Number of Dishes in a Week"

.         
.         egen                            dish_tot = count(dish_tot_temp), by(hhid)               

.         label var                       dish_tot "Total Number of Dishes"

.         
. * add up total number of breakfast dishes 
.         gen                                     brdish_tot_temp = 1 if meal == 0
(24,622 missing values generated)

.         
.         egen                            brdish_day = count(brdish_tot_temp), by(hhid week day)  

.         label var                       brdish_day "Number of Breakfast Dishes in a Day"

.         
.         egen                            brdish_week = count(brdish_tot_temp), by(hhid week)     

.         label var                       brdish_week "Number of Breakfast Dishes in a Week"

.         
.         egen                            brdish_tot = count(brdish_tot_temp), by(hhid)           

.         label var                       brdish_tot "Total Number of Breakfast Dishes"

.         
. * add up total number of lunch dishes
.         gen                                     lundish_tot_temp = 1 if meal == 1
(17,646 missing values generated)

.         
.         egen                            lundish_day = count(lundish_tot_temp), by(hhid week day)        

.         label var                       lundish_day "Number of Lunch Dishes in a Day"

.         
.         egen                            lundish_week = count(lundish_tot_temp), by(hhid week)   

.         label var                       lundish_week "Number of Lunch Dishes in a Week"

.         
.         egen                            lundish_tot = count(lundish_tot_temp), by(hhid)         

.         label var                       lundish_tot "Total Number of Lunch Dishes"

.         
. * add up total number of dinner dishes 
.         gen                                     dindish_tot_temp = 1 if meal == 2
(18,422 missing values generated)

.         
.         egen                            dindish_day = count(dindish_tot_temp), by(hhid week day)        

.         label var                       dindish_day "Number of Dinner Dishes in a Day"

.         
.         egen                            dindish_week = count(dindish_tot_temp), by(hhid week)   

.         label var                       dindish_week "Number of Dinner Dishes in a Week"

.         
.         egen                            dindish_tot = count(dindish_tot_temp), by(hhid)         

.         label var                       dindish_tot "Total Number of Dinner Dishes"

. 
. * drop unneeded variables
.         drop                            dish_tot_temp brdish_tot_temp lundish_tot_temp dindish_tot_temp

. 
. 
. ***********************************************************************
. **# 6 - generate meal_share variable
. ***********************************************************************         
.         
. * generate total times ss used to prepare dishes within meal
.         egen                    hh_m_use = total(ss_use), by(hhid week day meal)        

.         lab var                 hh_m_use "SS Use: Meal"

. 
. * sum of dishes per meal cooked using ANY fuel  
.         egen                    hh_m_fuel = count(dish), by(hhid week day meal)

.         lab var                 hh_m_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a meal
.         egen                    share_meal = max(hh_m_use/hh_m_fuel), by(hhid week day meal)

.         lab var                 share_meal "Share of SS Used Per Meal"

. 
. ** generate day_share variable  
. * generate a count of times ss used to prepare dishes within a day
.         egen                    hh_da_use = total(ss_use), by(hhid week day)

.         lab var                 hh_da_use "SS Use: Day"

. 
. * sum of dishes per day cooked using ANY fuel   
.         egen                    hh_da_fuel = count(dish), by(hhid week day)

.         lab var                 hh_da_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a day
.         egen                    share_day = max(hh_da_use/hh_da_fuel), by(hhid week day)        

.         lab var                 share_day "Share of SS Used Per Day"    

.         
. ** generate week_share variable                 
. * generate a count of times ss used to prepare dishes within a week
.         egen                    hh_w_use = total(ss_use), by(hhid week)

.         lab var                 hh_w_use "SS Use: Week"

.                 
. * sum of dishes per week cooked using ANY fuel  
.         egen                    hh_w_fuel = count(dish), by(hhid week)

.         lab var                 hh_w_fuel "Fuel Used: Week"     

. 
. * the share of all dishes prepared using a solar stove during a week
.         egen                    share_week = max(hh_w_use/hh_w_fuel), by(hhid week)

.         lab var                 share_week "Share of SS Used Per Week"  

.         
. ** generate tot_share variable                          
. * generate a count of times ss used to prepare dishes overall
.         egen                    hh_t_use = total(ss_use), by(hhid)

.         lab var                 hh_t_use "SS Use: Total"

.         
. * sum of overall dishes cooked using ANY fuel   
.         egen                    hh_t_fuel = count(dish), by(hhid)

.         lab var                 hh_t_fuel "Fuel Used: Total"    

. 
. * the overall share of all dishes prepared using a solar stove
.         egen                    share_total = max(hh_t_use/hh_t_fuel), by(hhid) 

.         lab var                 share_total "Share of SS Used Total"    

. 
.         
. ***********************************************************************
. **# 7 - add cloud cover data
. ***********************************************************************
. 
. * add cloud cover data
.         gen                     cc = 100 if week == 1 & village == 1
(28,998 missing values generated)

.         replace                 cc = 11.75 if week == 2 & village == 1
(1,310 real changes made)

.         replace                 cc= 99.99 if week == 3 & village == 1
(1,243 real changes made)

.         replace                 cc = 0.00 if week == 4 & village == 1
(1,151 real changes made)

.         replace                 cc = 0.00 if week == 5 & village == 1
(1,256 real changes made)

.         replace                 cc = 0.00 if week == 6 & village == 1
(1,259 real changes made)

.         replace                 cc = 100 if week == 1 & village == 0
(2,092 real changes made)

.         replace                 cc = 1.7 if week == 2 & village == 0
(1,922 real changes made)

.         replace                 cc = 2.06 if week == 3 & village == 0
(1,868 real changes made)

.         replace                 cc = 0 if week == 4 & village == 0
(2,040 real changes made)

.         replace                 cc = 0 if week == 5 & village == 0
(2,083 real changes made)

.         replace                 cc = 0.01 if week == 6 & village == 0
(2,115 real changes made)

.         replace                 cc = 100 if week == 1 & village == 2
(1,777 real changes made)

.         replace                 cc = 35.84 if week == 2 & village == 2
(1,687 real changes made)

.         replace                 cc = 0 if week == 3 & village == 2
(1,776 real changes made)

.         replace                 cc = 0 if week == 4 & village == 2
(1,766 real changes made)

.         replace                 cc = 0 if week == 5 & village == 2
(1,866 real changes made)

.         replace                 cc = 0 if week == 6 & village == 2
(1,787 real changes made)

.                 
.         lab var                 cc "Cloud Cover"        

. 
.         order                   cc, after(aas)

.         
. ***********************************************************************
. **# 8 - end matter, clean up to save
. ***********************************************************************
. 
.         lab var                         treat_assign "Solar Stove"

. 
. * prepare for export
.         compress        
  variable meal was float now byte
  variable dish was float now byte
  variable ss_use was float now byte
  variable cook was float now byte
  variable recall was float now byte
  variable ingred_dish was float now byte
  variable ingred_meal was float now byte
  variable ingred_day was float now byte
  variable ingred_week was float now byte
  variable hdds_dish was float now byte
  variable sr_dish was float now byte
  variable hdds_meal was float now byte
  variable sr_meal was float now byte
  variable hdds_day was float now byte
  variable sr_day was float now byte
  variable hdds_week was float now byte
  variable sr_week was float now byte
  variable hdds_total was float now byte
  variable sr_total was float now byte
  variable p_dish was float now byte
  variable p_meal was float now byte
  variable p_day was float now byte
  variable p_week was float now byte
  variable p_total was float now byte
  variable meal_day was float now byte
  variable meal_week was float now byte
  variable meal_total was float now int
  variable br_day was float now byte
  variable br_week was float now byte
  variable br_tot was float now byte
  variable lun_day was float now byte
  variable lun_week was float now byte
  variable lun_tot was float now byte
  variable din_day was float now byte
  variable din_week was float now byte
  variable din_tot was float now byte
  variable day_skip was float now byte
  variable week_skip was float now byte
  variable tot_skip was float now int
  variable brday_skip was float now byte
  variable brweek_skip was float now byte
  variable brtot_skip was float now byte
  variable lunday_skip was float now byte
  variable lunweek_skip was float now byte
  variable luntot_skip was float now byte
  variable dinday_skip was float now byte
  variable dinweek_skip was float now byte
  variable dintot_skip was float now byte
  variable dish_day was float now byte
  variable dish_week was float now byte
  variable dish_tot was float now int
  variable brdish_day was float now byte
  variable brdish_week was float now byte
  variable brdish_tot was float now byte
  variable lundish_day was float now byte
  variable lundish_week was float now byte
  variable lundish_tot was float now int
  variable dindish_day was float now byte
  variable dindish_week was float now byte
  variable dindish_tot was float now int
  variable hh_m_use was float now byte
  variable hh_m_fuel was float now byte
  variable hh_da_use was float now byte
  variable hh_da_fuel was float now byte
  variable hh_w_use was float now byte
  variable hh_w_fuel was float now byte
  variable hh_t_use was float now int
  variable hh_t_fuel was float now int
  (5,977,965 bytes saved)

.         save                            "$export/dietary_cleaned.dta", replace  
file C:/Users/jdmic/git/solar_stove/data/refined/dietary_cleaned.dta saved

.         
. * close the log
.         log                                     close
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 closed on:   1 Oct 2025, 13:01:26
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 opened on:   1 Oct 2025, 13:02:43

.         
. * load data
.         use                             "$export/cleaned_ingredients.dta", clear

. 
. 
. ***********************************************************************
. **# 1 - clean and transform data
. ***********************************************************************         
. 
. * merge in control variables
.         merge m:1               hhid using "$export/c_var.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                           341
        from master                       341  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            30,600  (_merge==3)
    -----------------------------------------

.         *** 30,602 merged, 341 not matched
.         *** all from households 340000 and 347000
.         
.         drop if                 _merge == 1
(341 observations deleted)

.         drop                    _merge

. 
. * household kept diary for 9 weeks
.         drop if                 week > 6
(199 observations deleted)

. 
. * only recorded breakfast
. *       drop if                 hhid == 226000
.                 
.         order                   village hhid aas hh_size ai tli sex age edu ///
>                                                 solar

. 
. * rename treatment and assignment variables
.         rename                  solar treat_assign

.         rename                  ss_count ss_use

.         
. * reshape data
.         reshape                 long english fg proc, ///
>                                                 i(hhid week day meal dish_num) j(ingred_num)
(j = 1 2 3 4 5 6 7)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations           30,401   ->   212,807     
Number of variables                  44   ->   27          
j variable (7 values)                     ->   ingred_num
xij variables:
         english1 english2 ... english7   ->   english
                        fg1 fg2 ... fg7   ->   fg
                  proc1 proc2 ... proc7   ->   proc
-----------------------------------------------------------------------------

. 
. * rearrange and label variables
.         lab var                 english "English Name of Ingredient"

.         lab var                 fg "Food Group"

.         lab var                 proc "Level of Processing"

.         
.         drop                    legumes

.         gen                             legumes = 1 if fg == 12
(211,025 missing values generated)

.         replace                 legumes = 0 if legumes == .
(211,025 real changes made)

.         lab var                 legumes "Were Legumes Cooked?"

.         
. * drop non-used ingredients
.         drop                    dish

.         
.         bys                     hhid week day meal dish_num: ///
>                                                 gen dish = 1 if _n == 1
(182,406 missing values generated)

.         order                   dish, after(dish_num)

.         bys                     hhid week day meal: ///
>                                                 replace dish = sum(dish)
(196876 real changes made)

.         lab var                 dish "Dish"

.         
.         drop                    dish_num

.         drop if                 english == ""
(97,248 observations deleted)

.         drop if                 english == "water"
(21,835 observations deleted)

.         
.         drop                    ingred_num

.         bys                     hhid week day meal dish: ///
>                                         gen     ingred_num = _n

.         lab var                 ingred_num "Ingredient Number in Dish"

.         
.         order                   village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook ingred_num recall

. 
. * clean a last few ingredients
.         replace                 english = "maize" if english == "maize yellow"          
(1 real change made)

.         replace                 english = "oil" if english == "cooking oil"                     
(8 real changes made)

.         replace                 english = "oil" if english == "peanut oil"                      
(1 real change made)

.         replace                 english = "sugar" if english == "candy"                         
(1 real change made)

.         replace                 english = "chili" if english == "green pepper"          
(29 real changes made)

.         replace                 english = "spinach" if english == "aquatic plant"                       
(4 real changes made)

.                                                 
.         merge                   m:1 english using "$root/sci_names.dta"
(variable english was str21, now str48 to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                            61
        from master                         1  (_merge==1)
        from using                         60  (_merge==2)

    Matched                            93,723  (_merge==3)
    -----------------------------------------

.         *** 94,269 merged, only 1 in master didn't merge
.         
.         tab                             english if _merge == 1

             English Name of Ingredient |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                        mauberry fruits |          1      100.00      100.00
----------------------------------------+-----------------------------------
                                  Total |          1      100.00

.         
.         replace                 scientific_name = "morus" if english == "mauberry fruits"
(1 real change made)

.         lab var                 scientific_name "Scientific Name"

.         
.         drop if                 _merge == 2
(60 observations deleted)

.         drop                    _merge

.         
.         encode                  scientific_name, gen(sci)

.         replace                 sci = 0 if sci == .
(27,405 real changes made)

.         lab var                 sci "Scientific Name"

.         drop                    scientific_name

.         
. * generate ingredient count per dish
.         egen                    ingred_dish = nvals(english), by(hhid week day meal dish)

.         lab var                 ingred_dish "Unique Ingredients: Dish"

.         
.         egen                    ingred_meal = nvals(english), by(hhid week day meal)

.         lab var                 ingred_meal "Unique Ingredients: Meal"

.         
.         egen                    ingred_day = nvals(english), by(hhid week day)

.         lab var                 ingred_day "Unique Ingredients: Day"

.         
.         egen                    ingred_week = nvals(english), by(hhid week)

.         lab var                 ingred_week "Unique Ingredients: Week"

.         
. * clean food group to put it into 12 categories (not 18)
.         replace                 fg = 14 if fg == 0
(0 real changes made)

.         replace                 fg = 5 if fg == 3 | fg == 4
(7,826 real changes made)

.         replace                 fg = 7 if fg == 6
(17 real changes made)

.         replace                 fg = 9 if fg == 8
(29 real changes made)

.         replace                 fg = 12 if fg == 19
(2,414 real changes made)

.         replace                 fg = 15 if fg == 17
(178 real changes made)

.         replace                 fg = 16 if fg == 18
(924 real changes made)

.         lab define              foodgroup 0 "None" 1 "Cereals" 2 "Tubers" 3 "Vitamin-A Vegetables" ///
>                                         4 "Leafy Greens" 5 "Vegetables" 6 "Vitamin-A Fruits" 7 "Fruits" ///
>                                         8 "Organ Meat" 9 "Meat" 10 "Eggs" 11 "Fish" 12 "Legumes, Nuts, & Seeds" ///
>                                         13 "Milk" 14 "Oils & Fats" 15 "Sweets" ///
>                                         16 "Spices, Condiments, & Beverages" 17 "Fried Snacks" ///
>                                         18 "Beverages", replace

.         
. 
.                                         
. ***********************************************************************
. **## 1.1 - create ingredient summary stats
. ***********************************************************************
. 
. * encode english string var into a numeric variable
.         encode                  english, gen(ingredients)

.         bys                     ingredients: gen size = _N

.         replace                 ingredients = 0 if size < 565
(5,749 real changes made)

.         lab define              ingredients 0 "other", add

.         
.         gen                             science = sci

.         replace                 science = . if science == 0
(27,405 real changes made, 27,405 to missing)

.         lab values              science sci

.         bys                     science: gen sizes = _N

.         replace                 science = 0 if sizes < 139
(1,336 real changes made)

.         lab define              sci 0 "other", add

.         
. * post frequency table of ingredients
.                 estpost tab             ingredients, sort nototal

 ingredients |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
        salt |     13702   14.61952   14.61952 
    porridge |     10520   11.22445   25.84397 
         oil |      9846   10.50531   36.34928 
       maize |      8267    8.82058   45.16986 
      tomato |      7977    8.51116   53.68102 
 maize_flour |      6056   6.461525   60.14255 
       other |      5749   6.133968   66.27651 
     cassava |      5581   5.954718   72.23123 
        fish |      3820   4.075797   76.30703 
       onion |      3792   4.045922   80.35295 
       sugar |      2679   2.858393   83.21134 
        rape |      2095   2.235287   85.44663 
   groundnut |      1954   2.084845   87.53148 
   sour_milk |      1501   1.601511   89.13299 
      cowpea |      1323   1.411591   90.54458 
cassava_le~s |      1073   1.144851   91.68943 
sweet_potato |      1025   1.093637   92.78307 
pumpkin_le~s |      1006   1.073364   93.85643 
    amaranth |       983   1.048824   94.90525 
    hibiscus |       942   1.005079   95.91033 
        rice |       869   .9271905   96.83752 
        meat |       826   .8813111   97.71883 
  tea_leaves |       817   .8717084   98.59054 
     pumpkin |       756   .8066237   99.39717 
        okra |       565   .6028339        100 

.          
. * code for latex tables
.         esttab                  using "$output/ing_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "the top 25 ingredient was recorded in the food diaries and 
> the relative " ///
>                                                         "frequency of that ingredient in the entire data set. In tot
> al " ///
>                                                         "111 different ingredients were recorded, excluding water.} 
>  \end{tabular}")    
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/ing_tab.tex)

. 
. * post frequency table of food groups
.                 estpost tab                     fg, sort nototal

          fg |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
           1 |     26171   27.92348   27.92348 
           5 |     21003   22.40941   50.33289 
          16 |     18210   19.42939   69.76228 
          14 |     10065   10.73898   80.50126 
           2 |      6667   7.113439    87.6147 
          12 |      4196   4.476975   92.09167 
          11 |      3820   4.075797   96.16747 
          13 |      1804     1.9248   98.09227 
           9 |      1123   1.198199   99.29047 
          10 |       329   .3510307    99.6415 
          15 |       190   .2027229   99.84422 
           7 |       146   .1557765        100 

row labels saved in macro e(labels)

.         
. * output table of food group frequencies
.                 esttab                   using "$output/fg_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment varlabels(`e(labels)') ///
>                                                         postfoot("\midrule Total       &       93,724&      100 \\ "
>  ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a food group is represented in the food diaries. There are 
> 12 " ///
>                                                         "total food groups.}  \end{tabular}")           
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/fg_tab.tex)

.         
. * post frequency table of species
.                 estpost tab                     science, sort nototal

     science |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
    zea_mays |     24925    37.5835    37.5835 
lycopersic~m |      7977   12.02823   49.61173 
manihot_es~a |      6666   10.05142   59.66314 
    fish_spp |      3820   5.760039   65.42318 
allium_cep~l |      3792   5.717818     71.141 
bos_tau~1758 |      2666   4.019964   75.16096 
cucurbuta_~o |      2196   3.311268   78.47223 
brassica_r~a |      2095   3.158974   81.63121 
arachis_hy~a |      1954   2.946365   84.57757 
       other |      1336   2.014506   86.59208 
vigna_ungu~p |      1327   2.000935   88.59301 
ipomoea_ba~s |      1324   1.996411   90.58942 
amaranthus~p |       983    1.48223   92.07165 
hibiscus_a~a |       942   1.420407   93.49206 
oryza_sati~l |       869   1.310333   94.80239 
aromatic_spp |       817   1.231924   96.03432 
gallus_~1758 |       570   .8594822    96.8938 
abelmoschu~s |       567   .8549586   97.74876 
lactarius_~p |       374    .563941    98.3127 
phaseolus_~l |       291   .4387883   98.75149 
cenchrus_a~s |       268   .4041074    99.1556 
schinzioph~i |       202   .3045884   99.46018 
brassica_o~a |       182   .2744312   99.73462 
cucurbita_~a |       176    .265384        100 

.         
. * output table of processed food frequencies
.                 esttab                   using "$output/sci_tab.tex", replace booktabs ///
>                                                         prehead("\begin{tabular}{l*{2}{c}} \\ [-1.8ex]\hline \hline 
> \\[-1.8ex] ") ///
>                                                         cells("b(label(Frequency) fmt(%9.0gc)) pct(label(Percent) fm
> t(2))") ///
>                                                         nonumber nomtitle noobs fragment ///
>                                                         postfoot("\midrule Total       &       66,3190&      100 \\ 
> " ///
>                                                         "\hline \hline \\[-1.8ex] \multicolumn{3}{J{\linewidth}}{\sm
> all " ///
>                                                         "\noindent \textit{Note}: The table displays the number of t
> imes " ///
>                                                         "a species is represented in the food diaries. There are 63 
> " ///
>                                                         "unique species total.}  \end{tabular}")                    
>             
(tabulating estimates stored by eststo; specify "." to tabulate the active results)
(output written to C:/Users/jdmic/git/solar_stove/data/analysis/tables/sci_tab.tex)

.         
.         
. ***********************************************************************
. **# 2 - generate variables for final hdds outcomes
. ***********************************************************************         
.                 
. * generate hdds and sr for dish
.         egen                    hdds_dish = nvals(fg), by(hhid week day meal dish)

.         lab var                 hdds_dish "HDDS: Dish"

.         egen                    sr_dish   = nvals(sci), by(hhid week day meal dish)

.         lab var                 sr_dish "SR: Dish"

.         
.         egen                    hdds_avg_dish = mean(hdds_dish), by(hhid)

.         lab var                 hdds_avg_dish "HDDS: Average Dish"

.         egen                    sr_avg_dish = mean(sr_dish), by(hhid)

.         lab var                 sr_avg_dish "SR: Average Dish"

.         
. * generate hdds and sr for meal
.         egen                    hdds_meal = nvals(fg), by(hhid week day meal)

.         lab var                 hdds_meal "HDDS: Meal"

.         egen                    sr_meal   = nvals(sci), by(hhid week day meal)

.         lab var                 sr_meal "SR: Meal"

.         
.         egen                    hdds_avg_meal = mean(hdds_meal), by(hhid)

.         lab var                 hdds_avg_meal "HDDS: Average Meal"

.         egen                    sr_avg_meal = mean(sr_meal), by(hhid)

.         lab var                 sr_avg_meal "SR: Average Meal"

.         
. * generate hdds and sr for day
.         egen                    hdds_day = nvals(fg), by(hhid week day)

.         lab var                 hdds_day "HDDS: Day"

.         egen                    sr_day   = nvals(sci), by(hhid week day)

.         lab var                 sr_day "SR: Day"

.         
.         egen                    hdds_avg_day = mean(hdds_day), by(hhid)

.         lab var                 hdds_avg_day "HDDS: Average Day"

.         egen                    sr_avg_day = mean(sr_day), by(hhid)

.         lab var                 sr_avg_day "SR: Average Day"

.         
. * generate hdds and sr for week
.         egen                    hdds_week = nvals(fg), by(hhid week)

.         lab var                 hdds_week "HDDS: Week"

.         egen                    sr_week   = nvals(sci), by(hhid week)

.         lab var                 sr_week "SR: Week"

.         
.         egen                    hdds_avg_week = mean(hdds_week), by(hhid)

.         lab var                 hdds_avg_week "HDDS: Average Week"

.         egen                    sr_avg_week = mean(sr_week), by(hhid)

.         lab var                 sr_avg_week "SR: Average Week"

. 
. * generate hdds and sr for total
.         egen                    hdds_total = nvals(fg), by(hhid)

.         lab var                 hdds_total "HDDS: Total"

.         egen                    sr_total   = nvals(sci), by(hhid)       

.         lab var                 sr_total "SR: Total"

. 
.         
. ***********************************************************************
. **# 3 - generate legume variables and collapse
. ***********************************************************************         
. 
.         collapse                (max) legumes, ///
>                                         by(village hhid aas hh_size ai tli sex age edu treat_assign ///
>                                                 week day meal dish ss_use cook hdds_dish sr_dish ///
>                                                 hdds_avg_dish sr_avg_dish hdds_meal ///
>                                                 sr_meal hdds_avg_meal sr_avg_meal hdds_day sr_day ///
>                                                 hdds_avg_day sr_avg_day hdds_week sr_week hdds_avg_week ///
>                                                 sr_avg_week hdds_total sr_total ingred_dish ingred_meal ///
>                                                 ingred_day ingred_week recall)

.         
.         lab var                 legumes "Where Legumes Eaten?"

.         
.         isid                    hhid week day meal dish

.         
. * generate legumes (pulses) for dish
.         rename                  legumes p_dish

.         lab var                 p_dish "Pulse: Dish"

.         
. * generate legumes (pulses) for meal
.         egen                    p_meal = total(p_dish), by(hhid week day meal)

.         lab var                 p_meal "Pulse: Meal"

.         
. * generate legumes (pulses) for day
.         egen                    p_day = total(p_dish), by(hhid week day)

.         lab var                 p_day "Pulse: Day

.         
. * generate legumes (pulses) for weak
.         egen                    p_week = total(p_dish), by(hhid week)

.         lab var                 p_week "Pulse: Week"

.         
. * generate legumes (pulses) for total
.         egen                    p_total = total(p_dish), by(hhid)

.         lab var                 p_total "Pulse: Total"

.         
.         
. ***********************************************************************
. **# 4 - generate variables for meals skipped
. *********************************************************************** 
. 
. * generate variable for total meals eaten
.         gen                                     day_temp = 1 if dish == 1
(14,420 missing values generated)

. 
.         egen                            meal_day = count(day_temp), by(hhid week day)

.         label var                       meal_day "Meals Per Day"                

.         
.         egen                            meal_week = count(day_temp), by(hhid week)

.         label var                       meal_week "Meals Per Week"      

. 
.         egen                            meal_total = count(day_temp), by(hhid)

.         label var                       meal_total "Total Meals"        

. 
. * generate variable for breakfast meals eaten   
.         gen                                     br_day_temp = 1 if meal == 0 & dish == 1
(25,813 missing values generated)

. 
.         egen                            br_day = count(br_day_temp), by(hhid week day)

.         label var                       br_day "Breakfasts Per Day"     

.         
.         egen                            br_week = count(br_day_temp), by(hhid week)

.         label var                       br_week "Breakfasts Per Week"   

. 
.         egen                            br_tot = count(br_day_temp), by(hhid)

.         label var                       br_tot "Total Breakfasts"

. 
. * generate variable for lunch meals eaten       
.         gen                                     lun_day_temp = 1 if meal == 1 & dish == 1
(24,558 missing values generated)

. 
.         egen                            lun_day = count(lun_day_temp), by(hhid week day)

.         label var                       lun_day "Lunches Per Day"       

.         
.         egen                            lun_week = count(lun_day_temp), by(hhid week)

.         label var                       lun_week "Lunches Per Week"     

. 
.         egen                            lun_tot = count(lun_day_temp), by(hhid)

.         label var                       lun_tot "Total Lunchs"

. 
. * generate variable for dinner meals eaten      
.         gen                                     din_day_temp = 1 if meal == 2 & dish == 1
(24,739 missing values generated)

. 
.         egen                            din_day = count(din_day_temp), by(hhid week day)

.         label var                       din_day "Dinners Per Day"       

.         
.         egen                            din_week = count(din_day_temp), by(hhid week)

.         label var                       din_week "Dinners Per Week"     

.          
.         egen                            din_tot = count(din_day_temp), by(hhid)

.         label var                       din_tot "Total Dinners"

.         
. * generate variables for the difference between max potential meals and total hh meals          
.         gen                             day_skip = 3 - meal_day

.         label var                       day_skip "Number of Meals Skipped in the Day"   

.         
.         gen                             week_skip = 21 - meal_week

.         label var                       week_skip "Number of Meals Skipped in the Week" 

. 
.         gen                             tot_skip = 126 - meal_total

.         label var                       tot_skip "Total Number of Meals Skipped"                

. 
. * generate variable that calculates the difference in max breakfast meals and meals a hh consumed       
.         gen                             brday_skip = 1 - br_day

.         label var                       brday_skip "Was Breakfast Skipped that Day?"    

. 
.         gen                             brweek_skip = 7 - br_week

.         label var                       brweek_skip "Number of Breakfasts Skipped in the Week"

.         
.         gen                             brtot_skip = 42 - br_tot

.         label var                       brtot_skip "Total Number of Breakfasts Skipped"

. 
. * generate variable that calculates the difference in max lunch meals and meals a hh consumed
.         gen                             lunday_skip = 1 - lun_day

.         label var                       lunday_skip "Was Lunch Skipped that Day?"       

. 
.         gen                             lunweek_skip = 7 - lun_week

.         label var                       lunweek_skip "Number of Lunches Skipped in the Week"

.                 
.         gen                             luntot_skip = 42 - lun_tot

.         label var                       luntot_skip "Total Number of Lunches Skipped"

. 
. * generate variable that calculates the difference in max dinner meals and meals a hh consumed
.         gen                             dinday_skip = 1 - din_day

.         label var                       dinday_skip "Was Dinner Skipped that Day?"      

. 
.         gen                             dinweek_skip = 7 - din_week

.         label var                       dinweek_skip "Number of Dinner Skipped in the Week"

.         
.         gen                             dintot_skip = 42 - din_tot

.         label var                       dintot_skip "Total Number of Dinners Skipped"

. 
. * drop unneeded variables
.         drop                            day_temp br_day_temp lun_day_temp din_day_temp

. 
.         
. ***********************************************************************
. **# 5 - generate variables for avg number of dishes per meal
. *********************************************************************** 
. 
. * add up total number of dishes
.         gen                                     dish_tot_temp = 1

.         
.         egen                            dish_day = count(dish_tot_temp), by(hhid week day)      

.         label var                       dish_day "Number of Dishes in a Day"

.         
.         egen                            dish_week = count(dish_tot_temp), by(hhid week) 

.         label var                       dish_week "Number of Dishes in a Week"

.         
.         egen                            dish_tot = count(dish_tot_temp), by(hhid)               

.         label var                       dish_tot "Total Number of Dishes"

.         
. * add up total number of breakfast dishes 
.         gen                                     brdish_tot_temp = 1 if meal == 0
(24,622 missing values generated)

.         
.         egen                            brdish_day = count(brdish_tot_temp), by(hhid week day)  

.         label var                       brdish_day "Number of Breakfast Dishes in a Day"

.         
.         egen                            brdish_week = count(brdish_tot_temp), by(hhid week)     

.         label var                       brdish_week "Number of Breakfast Dishes in a Week"

.         
.         egen                            brdish_tot = count(brdish_tot_temp), by(hhid)           

.         label var                       brdish_tot "Total Number of Breakfast Dishes"

.         
. * add up total number of lunch dishes
.         gen                                     lundish_tot_temp = 1 if meal == 1
(17,646 missing values generated)

.         
.         egen                            lundish_day = count(lundish_tot_temp), by(hhid week day)        

.         label var                       lundish_day "Number of Lunch Dishes in a Day"

.         
.         egen                            lundish_week = count(lundish_tot_temp), by(hhid week)   

.         label var                       lundish_week "Number of Lunch Dishes in a Week"

.         
.         egen                            lundish_tot = count(lundish_tot_temp), by(hhid)         

.         label var                       lundish_tot "Total Number of Lunch Dishes"

.         
. * add up total number of dinner dishes 
.         gen                                     dindish_tot_temp = 1 if meal == 2
(18,422 missing values generated)

.         
.         egen                            dindish_day = count(dindish_tot_temp), by(hhid week day)        

.         label var                       dindish_day "Number of Dinner Dishes in a Day"

.         
.         egen                            dindish_week = count(dindish_tot_temp), by(hhid week)   

.         label var                       dindish_week "Number of Dinner Dishes in a Week"

.         
.         egen                            dindish_tot = count(dindish_tot_temp), by(hhid)         

.         label var                       dindish_tot "Total Number of Dinner Dishes"

. 
. * drop unneeded variables
.         drop                            dish_tot_temp brdish_tot_temp lundish_tot_temp dindish_tot_temp

. 
. 
. ***********************************************************************
. **# 6 - generate meal_share variable
. ***********************************************************************         
.         
. * generate total times ss used to prepare dishes within meal
.         egen                    hh_m_use = total(ss_use), by(hhid week day meal)        

.         lab var                 hh_m_use "SS Use: Meal"

. 
. * sum of dishes per meal cooked using ANY fuel  
.         egen                    hh_m_fuel = count(dish), by(hhid week day meal)

.         lab var                 hh_m_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a meal
.         egen                    share_meal = max(hh_m_use/hh_m_fuel), by(hhid week day meal)

.         lab var                 share_meal "Share of SS Used Per Meal"

. 
. ** generate day_share variable  
. * generate a count of times ss used to prepare dishes within a day
.         egen                    hh_da_use = total(ss_use), by(hhid week day)

.         lab var                 hh_da_use "SS Use: Day"

. 
. * sum of dishes per day cooked using ANY fuel   
.         egen                    hh_da_fuel = count(dish), by(hhid week day)

.         lab var                 hh_da_fuel "Fuel Used: Meal"

. 
. * the share of all dishes prepared using a solar stove during a day
.         egen                    share_day = max(hh_da_use/hh_da_fuel), by(hhid week day)        

.         lab var                 share_day "Share of SS Used Per Day"    

.         
. ** generate week_share variable                 
. * generate a count of times ss used to prepare dishes within a week
.         egen                    hh_w_use = total(ss_use), by(hhid week)

.         lab var                 hh_w_use "SS Use: Week"

.                 
. * sum of dishes per week cooked using ANY fuel  
.         egen                    hh_w_fuel = count(dish), by(hhid week)

.         lab var                 hh_w_fuel "Fuel Used: Week"     

. 
. * the share of all dishes prepared using a solar stove during a week
.         egen                    share_week = max(hh_w_use/hh_w_fuel), by(hhid week)

.         lab var                 share_week "Share of SS Used Per Week"  

.         
. ** generate tot_share variable                          
. * generate a count of times ss used to prepare dishes overall
.         egen                    hh_t_use = total(ss_use), by(hhid)

.         lab var                 hh_t_use "SS Use: Total"

.         
. * sum of overall dishes cooked using ANY fuel   
.         egen                    hh_t_fuel = count(dish), by(hhid)

.         lab var                 hh_t_fuel "Fuel Used: Total"    

. 
. * the overall share of all dishes prepared using a solar stove
.         egen                    share_total = max(hh_t_use/hh_t_fuel), by(hhid) 

.         lab var                 share_total "Share of SS Used Total"    

. 
.         
. ***********************************************************************
. **# 7 - add cloud cover data
. ***********************************************************************
. 
. * add cloud cover data
.         gen                     cc = 100 if week == 1 & village == 1
(28,998 missing values generated)

.         replace                 cc = 11.75 if week == 2 & village == 1
(1,310 real changes made)

.         replace                 cc= 99.99 if week == 3 & village == 1
(1,243 real changes made)

.         replace                 cc = 0.00 if week == 4 & village == 1
(1,151 real changes made)

.         replace                 cc = 0.00 if week == 5 & village == 1
(1,256 real changes made)

.         replace                 cc = 0.00 if week == 6 & village == 1
(1,259 real changes made)

.         replace                 cc = 100 if week == 1 & village == 0
(2,092 real changes made)

.         replace                 cc = 1.7 if week == 2 & village == 0
(1,922 real changes made)

.         replace                 cc = 2.06 if week == 3 & village == 0
(1,868 real changes made)

.         replace                 cc = 0 if week == 4 & village == 0
(2,040 real changes made)

.         replace                 cc = 0 if week == 5 & village == 0
(2,083 real changes made)

.         replace                 cc = 0.01 if week == 6 & village == 0
(2,115 real changes made)

.         replace                 cc = 100 if week == 1 & village == 2
(1,777 real changes made)

.         replace                 cc = 35.84 if week == 2 & village == 2
(1,687 real changes made)

.         replace                 cc = 0 if week == 3 & village == 2
(1,776 real changes made)

.         replace                 cc = 0 if week == 4 & village == 2
(1,766 real changes made)

.         replace                 cc = 0 if week == 5 & village == 2
(1,866 real changes made)

.         replace                 cc = 0 if week == 6 & village == 2
(1,787 real changes made)

.                 
.         lab var                 cc "Cloud Cover"        

. 
.         order                   cc, after(aas)

.         
. ***********************************************************************
. **# 8 - end matter, clean up to save
. ***********************************************************************
. 
.         lab var                         treat_assign "Solar Stove"

. 
. * prepare for export
.         compress        
  variable meal was float now byte
  variable dish was float now byte
  variable ss_use was float now byte
  variable cook was float now byte
  variable recall was float now byte
  variable ingred_dish was float now byte
  variable ingred_meal was float now byte
  variable ingred_day was float now byte
  variable ingred_week was float now byte
  variable hdds_dish was float now byte
  variable sr_dish was float now byte
  variable hdds_meal was float now byte
  variable sr_meal was float now byte
  variable hdds_day was float now byte
  variable sr_day was float now byte
  variable hdds_week was float now byte
  variable sr_week was float now byte
  variable hdds_total was float now byte
  variable sr_total was float now byte
  variable p_dish was float now byte
  variable p_meal was float now byte
  variable p_day was float now byte
  variable p_week was float now byte
  variable p_total was float now byte
  variable meal_day was float now byte
  variable meal_week was float now byte
  variable meal_total was float now int
  variable br_day was float now byte
  variable br_week was float now byte
  variable br_tot was float now byte
  variable lun_day was float now byte
  variable lun_week was float now byte
  variable lun_tot was float now byte
  variable din_day was float now byte
  variable din_week was float now byte
  variable din_tot was float now byte
  variable day_skip was float now byte
  variable week_skip was float now byte
  variable tot_skip was float now int
  variable brday_skip was float now byte
  variable brweek_skip was float now byte
  variable brtot_skip was float now byte
  variable lunday_skip was float now byte
  variable lunweek_skip was float now byte
  variable luntot_skip was float now byte
  variable dinday_skip was float now byte
  variable dinweek_skip was float now byte
  variable dintot_skip was float now byte
  variable dish_day was float now byte
  variable dish_week was float now byte
  variable dish_tot was float now int
  variable brdish_day was float now byte
  variable brdish_week was float now byte
  variable brdish_tot was float now byte
  variable lundish_day was float now byte
  variable lundish_week was float now byte
  variable lundish_tot was float now int
  variable dindish_day was float now byte
  variable dindish_week was float now byte
  variable dindish_tot was float now int
  variable hh_m_use was float now byte
  variable hh_m_fuel was float now byte
  variable hh_da_use was float now byte
  variable hh_da_fuel was float now byte
  variable hh_w_use was float now byte
  variable hh_w_fuel was float now byte
  variable hh_t_use was float now int
  variable hh_t_fuel was float now int
  (5,977,965 bytes saved)

.         save                            "$export/dietary_cleaned.dta", replace  
file C:/Users/jdmic/git/solar_stove/data/refined/dietary_cleaned.dta saved

.         
. * close the log
.         log                                     close
      name:  <unnamed>
       log:  C:/Users/jdmic/git/solar_stove/data/logs/dietary_comp.log
  log type:  text
 closed on:   1 Oct 2025, 13:02:50
----------------------------------------------------------------------------------------------------------------------
